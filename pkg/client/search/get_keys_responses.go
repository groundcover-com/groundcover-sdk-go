// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/groundcover-com/groundcover-sdk-go/pkg/models"
)

// GetKeysReader is a Reader for the GetKeys structure.
type GetKeysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKeysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetKeysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKeysBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKeysInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/search/keys] getKeys", response, response.Code())
	}
}

// NewGetKeysOK creates a GetKeysOK with default headers values
func NewGetKeysOK() *GetKeysOK {
	return &GetKeysOK{}
}

/*
GetKeysOK describes a response with status code 200, with default header values.

GetKeysOK get keys o k
*/
type GetKeysOK struct {
	Payload *models.KeysResponse
}

// IsSuccess returns true when this get keys o k response has a 2xx status code
func (o *GetKeysOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get keys o k response has a 3xx status code
func (o *GetKeysOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get keys o k response has a 4xx status code
func (o *GetKeysOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get keys o k response has a 5xx status code
func (o *GetKeysOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get keys o k response a status code equal to that given
func (o *GetKeysOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get keys o k response
func (o *GetKeysOK) Code() int {
	return 200
}

func (o *GetKeysOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/search/keys][%d] getKeysOK %s", 200, payload)
}

func (o *GetKeysOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/search/keys][%d] getKeysOK %s", 200, payload)
}

func (o *GetKeysOK) GetPayload() *models.KeysResponse {
	return o.Payload
}

func (o *GetKeysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KeysResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetKeysBadRequest creates a GetKeysBadRequest with default headers values
func NewGetKeysBadRequest() *GetKeysBadRequest {
	return &GetKeysBadRequest{}
}

/*
GetKeysBadRequest describes a response with status code 400, with default header values.

ErrorResponse defines a common error response structure.
*/
type GetKeysBadRequest struct {
	Payload *GetKeysBadRequestBody
}

// IsSuccess returns true when this get keys bad request response has a 2xx status code
func (o *GetKeysBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get keys bad request response has a 3xx status code
func (o *GetKeysBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get keys bad request response has a 4xx status code
func (o *GetKeysBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get keys bad request response has a 5xx status code
func (o *GetKeysBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get keys bad request response a status code equal to that given
func (o *GetKeysBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get keys bad request response
func (o *GetKeysBadRequest) Code() int {
	return 400
}

func (o *GetKeysBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/search/keys][%d] getKeysBadRequest %s", 400, payload)
}

func (o *GetKeysBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/search/keys][%d] getKeysBadRequest %s", 400, payload)
}

func (o *GetKeysBadRequest) GetPayload() *GetKeysBadRequestBody {
	return o.Payload
}

func (o *GetKeysBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetKeysBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetKeysInternalServerError creates a GetKeysInternalServerError with default headers values
func NewGetKeysInternalServerError() *GetKeysInternalServerError {
	return &GetKeysInternalServerError{}
}

/*
GetKeysInternalServerError describes a response with status code 500, with default header values.

ErrorResponse defines a common error response structure.
*/
type GetKeysInternalServerError struct {
	Payload *GetKeysInternalServerErrorBody
}

// IsSuccess returns true when this get keys internal server error response has a 2xx status code
func (o *GetKeysInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get keys internal server error response has a 3xx status code
func (o *GetKeysInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get keys internal server error response has a 4xx status code
func (o *GetKeysInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get keys internal server error response has a 5xx status code
func (o *GetKeysInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get keys internal server error response a status code equal to that given
func (o *GetKeysInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get keys internal server error response
func (o *GetKeysInternalServerError) Code() int {
	return 500
}

func (o *GetKeysInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/search/keys][%d] getKeysInternalServerError %s", 500, payload)
}

func (o *GetKeysInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/search/keys][%d] getKeysInternalServerError %s", 500, payload)
}

func (o *GetKeysInternalServerError) GetPayload() *GetKeysInternalServerErrorBody {
	return o.Payload
}

func (o *GetKeysInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetKeysInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

/*
GetKeysBadRequestBody get keys bad request body
swagger:model GetKeysBadRequestBody
*/
type GetKeysBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get keys bad request body
func (o *GetKeysBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get keys bad request body based on context it is used
func (o *GetKeysBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetKeysBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetKeysBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetKeysBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetKeysInternalServerErrorBody get keys internal server error body
swagger:model GetKeysInternalServerErrorBody
*/
type GetKeysInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get keys internal server error body
func (o *GetKeysInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get keys internal server error body based on context it is used
func (o *GetKeysInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetKeysInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetKeysInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res GetKeysInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
