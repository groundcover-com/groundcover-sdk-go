// Code generated by go-swagger; DO NOT EDIT.

package policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ApplyPolicyReader is a Reader for the ApplyPolicy structure.
type ApplyPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ApplyPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewApplyPolicyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewApplyPolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewApplyPolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewApplyPolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /policies/apply] applyPolicy", response, response.Code())
	}
}

// NewApplyPolicyOK creates a ApplyPolicyOK with default headers values
func NewApplyPolicyOK() *ApplyPolicyOK {
	return &ApplyPolicyOK{}
}

/*
ApplyPolicyOK describes a response with status code 200, with default header values.

ApplyPolicyOK apply policy o k
*/
type ApplyPolicyOK struct {
}

// IsSuccess returns true when this apply policy o k response has a 2xx status code
func (o *ApplyPolicyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this apply policy o k response has a 3xx status code
func (o *ApplyPolicyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this apply policy o k response has a 4xx status code
func (o *ApplyPolicyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this apply policy o k response has a 5xx status code
func (o *ApplyPolicyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this apply policy o k response a status code equal to that given
func (o *ApplyPolicyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the apply policy o k response
func (o *ApplyPolicyOK) Code() int {
	return 200
}

func (o *ApplyPolicyOK) Error() string {
	return fmt.Sprintf("[POST /policies/apply][%d] applyPolicyOK", 200)
}

func (o *ApplyPolicyOK) String() string {
	return fmt.Sprintf("[POST /policies/apply][%d] applyPolicyOK", 200)
}

func (o *ApplyPolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewApplyPolicyBadRequest creates a ApplyPolicyBadRequest with default headers values
func NewApplyPolicyBadRequest() *ApplyPolicyBadRequest {
	return &ApplyPolicyBadRequest{}
}

/*
ApplyPolicyBadRequest describes a response with status code 400, with default header values.

ErrorResponse defines a common error response structure.
*/
type ApplyPolicyBadRequest struct {
	Payload *ApplyPolicyBadRequestBody
}

// IsSuccess returns true when this apply policy bad request response has a 2xx status code
func (o *ApplyPolicyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this apply policy bad request response has a 3xx status code
func (o *ApplyPolicyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this apply policy bad request response has a 4xx status code
func (o *ApplyPolicyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this apply policy bad request response has a 5xx status code
func (o *ApplyPolicyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this apply policy bad request response a status code equal to that given
func (o *ApplyPolicyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the apply policy bad request response
func (o *ApplyPolicyBadRequest) Code() int {
	return 400
}

func (o *ApplyPolicyBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /policies/apply][%d] applyPolicyBadRequest %s", 400, payload)
}

func (o *ApplyPolicyBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /policies/apply][%d] applyPolicyBadRequest %s", 400, payload)
}

func (o *ApplyPolicyBadRequest) GetPayload() *ApplyPolicyBadRequestBody {
	return o.Payload
}

func (o *ApplyPolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ApplyPolicyBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewApplyPolicyNotFound creates a ApplyPolicyNotFound with default headers values
func NewApplyPolicyNotFound() *ApplyPolicyNotFound {
	return &ApplyPolicyNotFound{}
}

/*
ApplyPolicyNotFound describes a response with status code 404, with default header values.

ErrorResponse defines a common error response structure.
*/
type ApplyPolicyNotFound struct {
	Payload *ApplyPolicyNotFoundBody
}

// IsSuccess returns true when this apply policy not found response has a 2xx status code
func (o *ApplyPolicyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this apply policy not found response has a 3xx status code
func (o *ApplyPolicyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this apply policy not found response has a 4xx status code
func (o *ApplyPolicyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this apply policy not found response has a 5xx status code
func (o *ApplyPolicyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this apply policy not found response a status code equal to that given
func (o *ApplyPolicyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the apply policy not found response
func (o *ApplyPolicyNotFound) Code() int {
	return 404
}

func (o *ApplyPolicyNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /policies/apply][%d] applyPolicyNotFound %s", 404, payload)
}

func (o *ApplyPolicyNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /policies/apply][%d] applyPolicyNotFound %s", 404, payload)
}

func (o *ApplyPolicyNotFound) GetPayload() *ApplyPolicyNotFoundBody {
	return o.Payload
}

func (o *ApplyPolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ApplyPolicyNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewApplyPolicyInternalServerError creates a ApplyPolicyInternalServerError with default headers values
func NewApplyPolicyInternalServerError() *ApplyPolicyInternalServerError {
	return &ApplyPolicyInternalServerError{}
}

/*
ApplyPolicyInternalServerError describes a response with status code 500, with default header values.

ErrorResponse defines a common error response structure.
*/
type ApplyPolicyInternalServerError struct {
	Payload *ApplyPolicyInternalServerErrorBody
}

// IsSuccess returns true when this apply policy internal server error response has a 2xx status code
func (o *ApplyPolicyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this apply policy internal server error response has a 3xx status code
func (o *ApplyPolicyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this apply policy internal server error response has a 4xx status code
func (o *ApplyPolicyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this apply policy internal server error response has a 5xx status code
func (o *ApplyPolicyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this apply policy internal server error response a status code equal to that given
func (o *ApplyPolicyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the apply policy internal server error response
func (o *ApplyPolicyInternalServerError) Code() int {
	return 500
}

func (o *ApplyPolicyInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /policies/apply][%d] applyPolicyInternalServerError %s", 500, payload)
}

func (o *ApplyPolicyInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /policies/apply][%d] applyPolicyInternalServerError %s", 500, payload)
}

func (o *ApplyPolicyInternalServerError) GetPayload() *ApplyPolicyInternalServerErrorBody {
	return o.Payload
}

func (o *ApplyPolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ApplyPolicyInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
ApplyPolicyBadRequestBody apply policy bad request body
swagger:model ApplyPolicyBadRequestBody
*/
type ApplyPolicyBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this apply policy bad request body
func (o *ApplyPolicyBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this apply policy bad request body based on context it is used
func (o *ApplyPolicyBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ApplyPolicyBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ApplyPolicyBadRequestBody) UnmarshalBinary(b []byte) error {
	var res ApplyPolicyBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ApplyPolicyInternalServerErrorBody apply policy internal server error body
swagger:model ApplyPolicyInternalServerErrorBody
*/
type ApplyPolicyInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this apply policy internal server error body
func (o *ApplyPolicyInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this apply policy internal server error body based on context it is used
func (o *ApplyPolicyInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ApplyPolicyInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ApplyPolicyInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res ApplyPolicyInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ApplyPolicyNotFoundBody apply policy not found body
swagger:model ApplyPolicyNotFoundBody
*/
type ApplyPolicyNotFoundBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this apply policy not found body
func (o *ApplyPolicyNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this apply policy not found body based on context it is used
func (o *ApplyPolicyNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ApplyPolicyNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ApplyPolicyNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ApplyPolicyNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
