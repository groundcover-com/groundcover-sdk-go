// Code generated by go-swagger; DO NOT EDIT.

package policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeletePolicyReader is a Reader for the DeletePolicy structure.
type DeletePolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeletePolicyNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeletePolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeletePolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeletePolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /api/rbac/policies/{id}] deletePolicy", response, response.Code())
	}
}

// NewDeletePolicyNoContent creates a DeletePolicyNoContent with default headers values
func NewDeletePolicyNoContent() *DeletePolicyNoContent {
	return &DeletePolicyNoContent{}
}

/*
DeletePolicyNoContent describes a response with status code 204, with default header values.

NoContentResponse indicates success but that no response body is expected or included.
*/
type DeletePolicyNoContent struct {
}

// IsSuccess returns true when this delete policy no content response has a 2xx status code
func (o *DeletePolicyNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete policy no content response has a 3xx status code
func (o *DeletePolicyNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete policy no content response has a 4xx status code
func (o *DeletePolicyNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete policy no content response has a 5xx status code
func (o *DeletePolicyNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete policy no content response a status code equal to that given
func (o *DeletePolicyNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete policy no content response
func (o *DeletePolicyNoContent) Code() int {
	return 204
}

func (o *DeletePolicyNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/rbac/policies/{id}][%d] deletePolicyNoContent", 204)
}

func (o *DeletePolicyNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/rbac/policies/{id}][%d] deletePolicyNoContent", 204)
}

func (o *DeletePolicyNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePolicyBadRequest creates a DeletePolicyBadRequest with default headers values
func NewDeletePolicyBadRequest() *DeletePolicyBadRequest {
	return &DeletePolicyBadRequest{}
}

/*
DeletePolicyBadRequest describes a response with status code 400, with default header values.

ErrorResponse defines a common error response structure.
*/
type DeletePolicyBadRequest struct {
	Payload *DeletePolicyBadRequestBody
}

// IsSuccess returns true when this delete policy bad request response has a 2xx status code
func (o *DeletePolicyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete policy bad request response has a 3xx status code
func (o *DeletePolicyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete policy bad request response has a 4xx status code
func (o *DeletePolicyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete policy bad request response has a 5xx status code
func (o *DeletePolicyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete policy bad request response a status code equal to that given
func (o *DeletePolicyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete policy bad request response
func (o *DeletePolicyBadRequest) Code() int {
	return 400
}

func (o *DeletePolicyBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/rbac/policies/{id}][%d] deletePolicyBadRequest %s", 400, payload)
}

func (o *DeletePolicyBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/rbac/policies/{id}][%d] deletePolicyBadRequest %s", 400, payload)
}

func (o *DeletePolicyBadRequest) GetPayload() *DeletePolicyBadRequestBody {
	return o.Payload
}

func (o *DeletePolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeletePolicyBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePolicyNotFound creates a DeletePolicyNotFound with default headers values
func NewDeletePolicyNotFound() *DeletePolicyNotFound {
	return &DeletePolicyNotFound{}
}

/*
DeletePolicyNotFound describes a response with status code 404, with default header values.

ErrorResponse defines a common error response structure.
*/
type DeletePolicyNotFound struct {
	Payload *DeletePolicyNotFoundBody
}

// IsSuccess returns true when this delete policy not found response has a 2xx status code
func (o *DeletePolicyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete policy not found response has a 3xx status code
func (o *DeletePolicyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete policy not found response has a 4xx status code
func (o *DeletePolicyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete policy not found response has a 5xx status code
func (o *DeletePolicyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete policy not found response a status code equal to that given
func (o *DeletePolicyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete policy not found response
func (o *DeletePolicyNotFound) Code() int {
	return 404
}

func (o *DeletePolicyNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/rbac/policies/{id}][%d] deletePolicyNotFound %s", 404, payload)
}

func (o *DeletePolicyNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/rbac/policies/{id}][%d] deletePolicyNotFound %s", 404, payload)
}

func (o *DeletePolicyNotFound) GetPayload() *DeletePolicyNotFoundBody {
	return o.Payload
}

func (o *DeletePolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeletePolicyNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePolicyInternalServerError creates a DeletePolicyInternalServerError with default headers values
func NewDeletePolicyInternalServerError() *DeletePolicyInternalServerError {
	return &DeletePolicyInternalServerError{}
}

/*
DeletePolicyInternalServerError describes a response with status code 500, with default header values.

ErrorResponse defines a common error response structure.
*/
type DeletePolicyInternalServerError struct {
	Payload *DeletePolicyInternalServerErrorBody
}

// IsSuccess returns true when this delete policy internal server error response has a 2xx status code
func (o *DeletePolicyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete policy internal server error response has a 3xx status code
func (o *DeletePolicyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete policy internal server error response has a 4xx status code
func (o *DeletePolicyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete policy internal server error response has a 5xx status code
func (o *DeletePolicyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete policy internal server error response a status code equal to that given
func (o *DeletePolicyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete policy internal server error response
func (o *DeletePolicyInternalServerError) Code() int {
	return 500
}

func (o *DeletePolicyInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/rbac/policies/{id}][%d] deletePolicyInternalServerError %s", 500, payload)
}

func (o *DeletePolicyInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/rbac/policies/{id}][%d] deletePolicyInternalServerError %s", 500, payload)
}

func (o *DeletePolicyInternalServerError) GetPayload() *DeletePolicyInternalServerErrorBody {
	return o.Payload
}

func (o *DeletePolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeletePolicyInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
DeletePolicyBadRequestBody delete policy bad request body
swagger:model DeletePolicyBadRequestBody
*/
type DeletePolicyBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this delete policy bad request body
func (o *DeletePolicyBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete policy bad request body based on context it is used
func (o *DeletePolicyBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeletePolicyBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeletePolicyBadRequestBody) UnmarshalBinary(b []byte) error {
	var res DeletePolicyBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeletePolicyInternalServerErrorBody delete policy internal server error body
swagger:model DeletePolicyInternalServerErrorBody
*/
type DeletePolicyInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this delete policy internal server error body
func (o *DeletePolicyInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete policy internal server error body based on context it is used
func (o *DeletePolicyInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeletePolicyInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeletePolicyInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res DeletePolicyInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeletePolicyNotFoundBody delete policy not found body
swagger:model DeletePolicyNotFoundBody
*/
type DeletePolicyNotFoundBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this delete policy not found body
func (o *DeletePolicyNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete policy not found body based on context it is used
func (o *DeletePolicyNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeletePolicyNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeletePolicyNotFoundBody) UnmarshalBinary(b []byte) error {
	var res DeletePolicyNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
