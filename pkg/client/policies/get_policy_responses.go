// Code generated by go-swagger; DO NOT EDIT.

package policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/groundcover-com/groundcover-sdk-go/pkg/models"
)

// GetPolicyReader is a Reader for the GetPolicy structure.
type GetPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPolicyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/rbac/policy/{id}] getPolicy", response, response.Code())
	}
}

// NewGetPolicyOK creates a GetPolicyOK with default headers values
func NewGetPolicyOK() *GetPolicyOK {
	return &GetPolicyOK{}
}

/*
GetPolicyOK describes a response with status code 200, with default header values.

Add response wrapper definition ---
*/
type GetPolicyOK struct {
	Payload *models.Policy
}

// IsSuccess returns true when this get policy o k response has a 2xx status code
func (o *GetPolicyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get policy o k response has a 3xx status code
func (o *GetPolicyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policy o k response has a 4xx status code
func (o *GetPolicyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get policy o k response has a 5xx status code
func (o *GetPolicyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get policy o k response a status code equal to that given
func (o *GetPolicyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get policy o k response
func (o *GetPolicyOK) Code() int {
	return 200
}

func (o *GetPolicyOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rbac/policy/{id}][%d] getPolicyOK %s", 200, payload)
}

func (o *GetPolicyOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rbac/policy/{id}][%d] getPolicyOK %s", 200, payload)
}

func (o *GetPolicyOK) GetPayload() *models.Policy {
	return o.Payload
}

func (o *GetPolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Policy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPolicyBadRequest creates a GetPolicyBadRequest with default headers values
func NewGetPolicyBadRequest() *GetPolicyBadRequest {
	return &GetPolicyBadRequest{}
}

/*
GetPolicyBadRequest describes a response with status code 400, with default header values.

ErrorResponse defines a common error response structure.
*/
type GetPolicyBadRequest struct {
	Payload *GetPolicyBadRequestBody
}

// IsSuccess returns true when this get policy bad request response has a 2xx status code
func (o *GetPolicyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get policy bad request response has a 3xx status code
func (o *GetPolicyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policy bad request response has a 4xx status code
func (o *GetPolicyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get policy bad request response has a 5xx status code
func (o *GetPolicyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get policy bad request response a status code equal to that given
func (o *GetPolicyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get policy bad request response
func (o *GetPolicyBadRequest) Code() int {
	return 400
}

func (o *GetPolicyBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rbac/policy/{id}][%d] getPolicyBadRequest %s", 400, payload)
}

func (o *GetPolicyBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rbac/policy/{id}][%d] getPolicyBadRequest %s", 400, payload)
}

func (o *GetPolicyBadRequest) GetPayload() *GetPolicyBadRequestBody {
	return o.Payload
}

func (o *GetPolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPolicyBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPolicyNotFound creates a GetPolicyNotFound with default headers values
func NewGetPolicyNotFound() *GetPolicyNotFound {
	return &GetPolicyNotFound{}
}

/*
GetPolicyNotFound describes a response with status code 404, with default header values.

ErrorResponse defines a common error response structure.
*/
type GetPolicyNotFound struct {
	Payload *GetPolicyNotFoundBody
}

// IsSuccess returns true when this get policy not found response has a 2xx status code
func (o *GetPolicyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get policy not found response has a 3xx status code
func (o *GetPolicyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policy not found response has a 4xx status code
func (o *GetPolicyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get policy not found response has a 5xx status code
func (o *GetPolicyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get policy not found response a status code equal to that given
func (o *GetPolicyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get policy not found response
func (o *GetPolicyNotFound) Code() int {
	return 404
}

func (o *GetPolicyNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rbac/policy/{id}][%d] getPolicyNotFound %s", 404, payload)
}

func (o *GetPolicyNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rbac/policy/{id}][%d] getPolicyNotFound %s", 404, payload)
}

func (o *GetPolicyNotFound) GetPayload() *GetPolicyNotFoundBody {
	return o.Payload
}

func (o *GetPolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPolicyNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPolicyInternalServerError creates a GetPolicyInternalServerError with default headers values
func NewGetPolicyInternalServerError() *GetPolicyInternalServerError {
	return &GetPolicyInternalServerError{}
}

/*
GetPolicyInternalServerError describes a response with status code 500, with default header values.

ErrorResponse defines a common error response structure.
*/
type GetPolicyInternalServerError struct {
	Payload *GetPolicyInternalServerErrorBody
}

// IsSuccess returns true when this get policy internal server error response has a 2xx status code
func (o *GetPolicyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get policy internal server error response has a 3xx status code
func (o *GetPolicyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policy internal server error response has a 4xx status code
func (o *GetPolicyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get policy internal server error response has a 5xx status code
func (o *GetPolicyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get policy internal server error response a status code equal to that given
func (o *GetPolicyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get policy internal server error response
func (o *GetPolicyInternalServerError) Code() int {
	return 500
}

func (o *GetPolicyInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rbac/policy/{id}][%d] getPolicyInternalServerError %s", 500, payload)
}

func (o *GetPolicyInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rbac/policy/{id}][%d] getPolicyInternalServerError %s", 500, payload)
}

func (o *GetPolicyInternalServerError) GetPayload() *GetPolicyInternalServerErrorBody {
	return o.Payload
}

func (o *GetPolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPolicyInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetPolicyBadRequestBody get policy bad request body
swagger:model GetPolicyBadRequestBody
*/
type GetPolicyBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get policy bad request body
func (o *GetPolicyBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get policy bad request body based on context it is used
func (o *GetPolicyBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPolicyBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPolicyBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetPolicyBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPolicyInternalServerErrorBody get policy internal server error body
swagger:model GetPolicyInternalServerErrorBody
*/
type GetPolicyInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get policy internal server error body
func (o *GetPolicyInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get policy internal server error body based on context it is used
func (o *GetPolicyInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPolicyInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPolicyInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res GetPolicyInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPolicyNotFoundBody get policy not found body
swagger:model GetPolicyNotFoundBody
*/
type GetPolicyNotFoundBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get policy not found body
func (o *GetPolicyNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get policy not found body based on context it is used
func (o *GetPolicyNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPolicyNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPolicyNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetPolicyNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
