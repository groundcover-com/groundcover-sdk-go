// Code generated by go-swagger; DO NOT EDIT.

package policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/groundcover-com/groundcover-sdk-go/pkg/models"
)

// ListPoliciesReader is a Reader for the ListPolicies structure.
type ListPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewListPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewListPoliciesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/rbac/policies/list] listPolicies", response, response.Code())
	}
}

// NewListPoliciesOK creates a ListPoliciesOK with default headers values
func NewListPoliciesOK() *ListPoliciesOK {
	return &ListPoliciesOK{}
}

/*
ListPoliciesOK describes a response with status code 200, with default header values.

ListPoliciesResponse contains a list of policies with entity counts.
*/
type ListPoliciesOK struct {
	Payload []*models.PolicyWithEntityCount
}

// IsSuccess returns true when this list policies o k response has a 2xx status code
func (o *ListPoliciesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list policies o k response has a 3xx status code
func (o *ListPoliciesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list policies o k response has a 4xx status code
func (o *ListPoliciesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list policies o k response has a 5xx status code
func (o *ListPoliciesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list policies o k response a status code equal to that given
func (o *ListPoliciesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list policies o k response
func (o *ListPoliciesOK) Code() int {
	return 200
}

func (o *ListPoliciesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rbac/policies/list][%d] listPoliciesOK %s", 200, payload)
}

func (o *ListPoliciesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rbac/policies/list][%d] listPoliciesOK %s", 200, payload)
}

func (o *ListPoliciesOK) GetPayload() []*models.PolicyWithEntityCount {
	return o.Payload
}

func (o *ListPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewListPoliciesInternalServerError creates a ListPoliciesInternalServerError with default headers values
func NewListPoliciesInternalServerError() *ListPoliciesInternalServerError {
	return &ListPoliciesInternalServerError{}
}

/*
ListPoliciesInternalServerError describes a response with status code 500, with default header values.

ErrorResponse defines a common error response structure.
*/
type ListPoliciesInternalServerError struct {
	Payload *ListPoliciesInternalServerErrorBody
}

// IsSuccess returns true when this list policies internal server error response has a 2xx status code
func (o *ListPoliciesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list policies internal server error response has a 3xx status code
func (o *ListPoliciesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list policies internal server error response has a 4xx status code
func (o *ListPoliciesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list policies internal server error response has a 5xx status code
func (o *ListPoliciesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list policies internal server error response a status code equal to that given
func (o *ListPoliciesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list policies internal server error response
func (o *ListPoliciesInternalServerError) Code() int {
	return 500
}

func (o *ListPoliciesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rbac/policies/list][%d] listPoliciesInternalServerError %s", 500, payload)
}

func (o *ListPoliciesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/rbac/policies/list][%d] listPoliciesInternalServerError %s", 500, payload)
}

func (o *ListPoliciesInternalServerError) GetPayload() *ListPoliciesInternalServerErrorBody {
	return o.Payload
}

func (o *ListPoliciesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListPoliciesInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

/*
ListPoliciesInternalServerErrorBody list policies internal server error body
swagger:model ListPoliciesInternalServerErrorBody
*/
type ListPoliciesInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this list policies internal server error body
func (o *ListPoliciesInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list policies internal server error body based on context it is used
func (o *ListPoliciesInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListPoliciesInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListPoliciesInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res ListPoliciesInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
