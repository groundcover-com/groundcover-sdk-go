// Code generated by go-swagger; DO NOT EDIT.

package integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteDataIntegrationConfigParams creates a new DeleteDataIntegrationConfigParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteDataIntegrationConfigParams() *DeleteDataIntegrationConfigParams {
	return &DeleteDataIntegrationConfigParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteDataIntegrationConfigParamsWithTimeout creates a new DeleteDataIntegrationConfigParams object
// with the ability to set a timeout on a request.
func NewDeleteDataIntegrationConfigParamsWithTimeout(timeout time.Duration) *DeleteDataIntegrationConfigParams {
	return &DeleteDataIntegrationConfigParams{
		timeout: timeout,
	}
}

// NewDeleteDataIntegrationConfigParamsWithContext creates a new DeleteDataIntegrationConfigParams object
// with the ability to set a context for a request.
func NewDeleteDataIntegrationConfigParamsWithContext(ctx context.Context) *DeleteDataIntegrationConfigParams {
	return &DeleteDataIntegrationConfigParams{
		Context: ctx,
	}
}

// NewDeleteDataIntegrationConfigParamsWithHTTPClient creates a new DeleteDataIntegrationConfigParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteDataIntegrationConfigParamsWithHTTPClient(client *http.Client) *DeleteDataIntegrationConfigParams {
	return &DeleteDataIntegrationConfigParams{
		HTTPClient: client,
	}
}

/*
DeleteDataIntegrationConfigParams contains all the parameters to send to the API endpoint

	for the delete data integration config operation.

	Typically these are written to a http.Request.
*/
type DeleteDataIntegrationConfigParams struct {

	/* Cluster.

	   Cluster name
	*/
	Cluster *string

	/* Env.

	   Environment name
	*/
	Env *string

	/* ID.

	   Data Integration ID
	*/
	ID string

	/* Instance.

	   Instance name
	*/
	Instance *string

	/* Type.

	   Data Integration type
	*/
	Type string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete data integration config params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteDataIntegrationConfigParams) WithDefaults() *DeleteDataIntegrationConfigParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete data integration config params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteDataIntegrationConfigParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete data integration config params
func (o *DeleteDataIntegrationConfigParams) WithTimeout(timeout time.Duration) *DeleteDataIntegrationConfigParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete data integration config params
func (o *DeleteDataIntegrationConfigParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete data integration config params
func (o *DeleteDataIntegrationConfigParams) WithContext(ctx context.Context) *DeleteDataIntegrationConfigParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete data integration config params
func (o *DeleteDataIntegrationConfigParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete data integration config params
func (o *DeleteDataIntegrationConfigParams) WithHTTPClient(client *http.Client) *DeleteDataIntegrationConfigParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete data integration config params
func (o *DeleteDataIntegrationConfigParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCluster adds the cluster to the delete data integration config params
func (o *DeleteDataIntegrationConfigParams) WithCluster(cluster *string) *DeleteDataIntegrationConfigParams {
	o.SetCluster(cluster)
	return o
}

// SetCluster adds the cluster to the delete data integration config params
func (o *DeleteDataIntegrationConfigParams) SetCluster(cluster *string) {
	o.Cluster = cluster
}

// WithEnv adds the env to the delete data integration config params
func (o *DeleteDataIntegrationConfigParams) WithEnv(env *string) *DeleteDataIntegrationConfigParams {
	o.SetEnv(env)
	return o
}

// SetEnv adds the env to the delete data integration config params
func (o *DeleteDataIntegrationConfigParams) SetEnv(env *string) {
	o.Env = env
}

// WithID adds the id to the delete data integration config params
func (o *DeleteDataIntegrationConfigParams) WithID(id string) *DeleteDataIntegrationConfigParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the delete data integration config params
func (o *DeleteDataIntegrationConfigParams) SetID(id string) {
	o.ID = id
}

// WithInstance adds the instance to the delete data integration config params
func (o *DeleteDataIntegrationConfigParams) WithInstance(instance *string) *DeleteDataIntegrationConfigParams {
	o.SetInstance(instance)
	return o
}

// SetInstance adds the instance to the delete data integration config params
func (o *DeleteDataIntegrationConfigParams) SetInstance(instance *string) {
	o.Instance = instance
}

// WithType adds the typeVar to the delete data integration config params
func (o *DeleteDataIntegrationConfigParams) WithType(typeVar string) *DeleteDataIntegrationConfigParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the delete data integration config params
func (o *DeleteDataIntegrationConfigParams) SetType(typeVar string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteDataIntegrationConfigParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Cluster != nil {

		// query param cluster
		var qrCluster string

		if o.Cluster != nil {
			qrCluster = *o.Cluster
		}
		qCluster := qrCluster
		if qCluster != "" {

			if err := r.SetQueryParam("cluster", qCluster); err != nil {
				return err
			}
		}
	}

	if o.Env != nil {

		// query param env
		var qrEnv string

		if o.Env != nil {
			qrEnv = *o.Env
		}
		qEnv := qrEnv
		if qEnv != "" {

			if err := r.SetQueryParam("env", qEnv); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.Instance != nil {

		// query param instance
		var qrInstance string

		if o.Instance != nil {
			qrInstance = *o.Instance
		}
		qInstance := qrInstance
		if qInstance != "" {

			if err := r.SetQueryParam("instance", qInstance); err != nil {
				return err
			}
		}
	}

	// path param type
	if err := r.SetPathParam("type", o.Type); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
