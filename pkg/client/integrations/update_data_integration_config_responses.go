// Code generated by go-swagger; DO NOT EDIT.

package integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/groundcover-com/groundcover-sdk-go/pkg/models"
)

// UpdateDataIntegrationConfigReader is a Reader for the UpdateDataIntegrationConfig structure.
type UpdateDataIntegrationConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateDataIntegrationConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateDataIntegrationConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateDataIntegrationConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateDataIntegrationConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateDataIntegrationConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewUpdateDataIntegrationConfigServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /api/integrations/v1/data/config/{type}/{id}] updateDataIntegrationConfig", response, response.Code())
	}
}

// NewUpdateDataIntegrationConfigOK creates a UpdateDataIntegrationConfigOK with default headers values
func NewUpdateDataIntegrationConfigOK() *UpdateDataIntegrationConfigOK {
	return &UpdateDataIntegrationConfigOK{}
}

/*
UpdateDataIntegrationConfigOK describes a response with status code 200, with default header values.

UpdateDataIntegrationConfigOK update data integration config o k
*/
type UpdateDataIntegrationConfigOK struct {
	Payload *models.DataIntegrationConfig
}

// IsSuccess returns true when this update data integration config o k response has a 2xx status code
func (o *UpdateDataIntegrationConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update data integration config o k response has a 3xx status code
func (o *UpdateDataIntegrationConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update data integration config o k response has a 4xx status code
func (o *UpdateDataIntegrationConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update data integration config o k response has a 5xx status code
func (o *UpdateDataIntegrationConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update data integration config o k response a status code equal to that given
func (o *UpdateDataIntegrationConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update data integration config o k response
func (o *UpdateDataIntegrationConfigOK) Code() int {
	return 200
}

func (o *UpdateDataIntegrationConfigOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/integrations/v1/data/config/{type}/{id}][%d] updateDataIntegrationConfigOK %s", 200, payload)
}

func (o *UpdateDataIntegrationConfigOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/integrations/v1/data/config/{type}/{id}][%d] updateDataIntegrationConfigOK %s", 200, payload)
}

func (o *UpdateDataIntegrationConfigOK) GetPayload() *models.DataIntegrationConfig {
	return o.Payload
}

func (o *UpdateDataIntegrationConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataIntegrationConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDataIntegrationConfigBadRequest creates a UpdateDataIntegrationConfigBadRequest with default headers values
func NewUpdateDataIntegrationConfigBadRequest() *UpdateDataIntegrationConfigBadRequest {
	return &UpdateDataIntegrationConfigBadRequest{}
}

/*
UpdateDataIntegrationConfigBadRequest describes a response with status code 400, with default header values.

UpdateDataIntegrationConfigBadRequest update data integration config bad request
*/
type UpdateDataIntegrationConfigBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update data integration config bad request response has a 2xx status code
func (o *UpdateDataIntegrationConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update data integration config bad request response has a 3xx status code
func (o *UpdateDataIntegrationConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update data integration config bad request response has a 4xx status code
func (o *UpdateDataIntegrationConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update data integration config bad request response has a 5xx status code
func (o *UpdateDataIntegrationConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update data integration config bad request response a status code equal to that given
func (o *UpdateDataIntegrationConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update data integration config bad request response
func (o *UpdateDataIntegrationConfigBadRequest) Code() int {
	return 400
}

func (o *UpdateDataIntegrationConfigBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/integrations/v1/data/config/{type}/{id}][%d] updateDataIntegrationConfigBadRequest %s", 400, payload)
}

func (o *UpdateDataIntegrationConfigBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/integrations/v1/data/config/{type}/{id}][%d] updateDataIntegrationConfigBadRequest %s", 400, payload)
}

func (o *UpdateDataIntegrationConfigBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateDataIntegrationConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDataIntegrationConfigNotFound creates a UpdateDataIntegrationConfigNotFound with default headers values
func NewUpdateDataIntegrationConfigNotFound() *UpdateDataIntegrationConfigNotFound {
	return &UpdateDataIntegrationConfigNotFound{}
}

/*
UpdateDataIntegrationConfigNotFound describes a response with status code 404, with default header values.

UpdateDataIntegrationConfigNotFound update data integration config not found
*/
type UpdateDataIntegrationConfigNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update data integration config not found response has a 2xx status code
func (o *UpdateDataIntegrationConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update data integration config not found response has a 3xx status code
func (o *UpdateDataIntegrationConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update data integration config not found response has a 4xx status code
func (o *UpdateDataIntegrationConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update data integration config not found response has a 5xx status code
func (o *UpdateDataIntegrationConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update data integration config not found response a status code equal to that given
func (o *UpdateDataIntegrationConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update data integration config not found response
func (o *UpdateDataIntegrationConfigNotFound) Code() int {
	return 404
}

func (o *UpdateDataIntegrationConfigNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/integrations/v1/data/config/{type}/{id}][%d] updateDataIntegrationConfigNotFound %s", 404, payload)
}

func (o *UpdateDataIntegrationConfigNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/integrations/v1/data/config/{type}/{id}][%d] updateDataIntegrationConfigNotFound %s", 404, payload)
}

func (o *UpdateDataIntegrationConfigNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateDataIntegrationConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDataIntegrationConfigInternalServerError creates a UpdateDataIntegrationConfigInternalServerError with default headers values
func NewUpdateDataIntegrationConfigInternalServerError() *UpdateDataIntegrationConfigInternalServerError {
	return &UpdateDataIntegrationConfigInternalServerError{}
}

/*
UpdateDataIntegrationConfigInternalServerError describes a response with status code 500, with default header values.

UpdateDataIntegrationConfigInternalServerError update data integration config internal server error
*/
type UpdateDataIntegrationConfigInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update data integration config internal server error response has a 2xx status code
func (o *UpdateDataIntegrationConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update data integration config internal server error response has a 3xx status code
func (o *UpdateDataIntegrationConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update data integration config internal server error response has a 4xx status code
func (o *UpdateDataIntegrationConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update data integration config internal server error response has a 5xx status code
func (o *UpdateDataIntegrationConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update data integration config internal server error response a status code equal to that given
func (o *UpdateDataIntegrationConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update data integration config internal server error response
func (o *UpdateDataIntegrationConfigInternalServerError) Code() int {
	return 500
}

func (o *UpdateDataIntegrationConfigInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/integrations/v1/data/config/{type}/{id}][%d] updateDataIntegrationConfigInternalServerError %s", 500, payload)
}

func (o *UpdateDataIntegrationConfigInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/integrations/v1/data/config/{type}/{id}][%d] updateDataIntegrationConfigInternalServerError %s", 500, payload)
}

func (o *UpdateDataIntegrationConfigInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateDataIntegrationConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDataIntegrationConfigServiceUnavailable creates a UpdateDataIntegrationConfigServiceUnavailable with default headers values
func NewUpdateDataIntegrationConfigServiceUnavailable() *UpdateDataIntegrationConfigServiceUnavailable {
	return &UpdateDataIntegrationConfigServiceUnavailable{}
}

/*
UpdateDataIntegrationConfigServiceUnavailable describes a response with status code 503, with default header values.

UpdateDataIntegrationConfigServiceUnavailable update data integration config service unavailable
*/
type UpdateDataIntegrationConfigServiceUnavailable struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update data integration config service unavailable response has a 2xx status code
func (o *UpdateDataIntegrationConfigServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update data integration config service unavailable response has a 3xx status code
func (o *UpdateDataIntegrationConfigServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update data integration config service unavailable response has a 4xx status code
func (o *UpdateDataIntegrationConfigServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this update data integration config service unavailable response has a 5xx status code
func (o *UpdateDataIntegrationConfigServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this update data integration config service unavailable response a status code equal to that given
func (o *UpdateDataIntegrationConfigServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the update data integration config service unavailable response
func (o *UpdateDataIntegrationConfigServiceUnavailable) Code() int {
	return 503
}

func (o *UpdateDataIntegrationConfigServiceUnavailable) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/integrations/v1/data/config/{type}/{id}][%d] updateDataIntegrationConfigServiceUnavailable %s", 503, payload)
}

func (o *UpdateDataIntegrationConfigServiceUnavailable) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/integrations/v1/data/config/{type}/{id}][%d] updateDataIntegrationConfigServiceUnavailable %s", 503, payload)
}

func (o *UpdateDataIntegrationConfigServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateDataIntegrationConfigServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
