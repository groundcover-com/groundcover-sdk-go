// Code generated by go-swagger; DO NOT EDIT.

package monitors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/groundcover-com/groundcover-sdk-go/pkg/models"
)

// CreateSilenceReader is a Reader for the CreateSilence structure.
type CreateSilenceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSilenceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateSilenceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateSilenceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateSilenceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/monitors/silences] createSilence", response, response.Code())
	}
}

// NewCreateSilenceOK creates a CreateSilenceOK with default headers values
func NewCreateSilenceOK() *CreateSilenceOK {
	return &CreateSilenceOK{}
}

/*
CreateSilenceOK describes a response with status code 200, with default header values.

CreateSilenceOK create silence o k
*/
type CreateSilenceOK struct {
	Payload *models.Silence
}

// IsSuccess returns true when this create silence o k response has a 2xx status code
func (o *CreateSilenceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create silence o k response has a 3xx status code
func (o *CreateSilenceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create silence o k response has a 4xx status code
func (o *CreateSilenceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create silence o k response has a 5xx status code
func (o *CreateSilenceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create silence o k response a status code equal to that given
func (o *CreateSilenceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create silence o k response
func (o *CreateSilenceOK) Code() int {
	return 200
}

func (o *CreateSilenceOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/monitors/silences][%d] createSilenceOK %s", 200, payload)
}

func (o *CreateSilenceOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/monitors/silences][%d] createSilenceOK %s", 200, payload)
}

func (o *CreateSilenceOK) GetPayload() *models.Silence {
	return o.Payload
}

func (o *CreateSilenceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Silence)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSilenceBadRequest creates a CreateSilenceBadRequest with default headers values
func NewCreateSilenceBadRequest() *CreateSilenceBadRequest {
	return &CreateSilenceBadRequest{}
}

/*
CreateSilenceBadRequest describes a response with status code 400, with default header values.

ErrorResponse defines a common error response structure.
*/
type CreateSilenceBadRequest struct {
	Payload *CreateSilenceBadRequestBody
}

// IsSuccess returns true when this create silence bad request response has a 2xx status code
func (o *CreateSilenceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create silence bad request response has a 3xx status code
func (o *CreateSilenceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create silence bad request response has a 4xx status code
func (o *CreateSilenceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create silence bad request response has a 5xx status code
func (o *CreateSilenceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create silence bad request response a status code equal to that given
func (o *CreateSilenceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create silence bad request response
func (o *CreateSilenceBadRequest) Code() int {
	return 400
}

func (o *CreateSilenceBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/monitors/silences][%d] createSilenceBadRequest %s", 400, payload)
}

func (o *CreateSilenceBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/monitors/silences][%d] createSilenceBadRequest %s", 400, payload)
}

func (o *CreateSilenceBadRequest) GetPayload() *CreateSilenceBadRequestBody {
	return o.Payload
}

func (o *CreateSilenceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateSilenceBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSilenceInternalServerError creates a CreateSilenceInternalServerError with default headers values
func NewCreateSilenceInternalServerError() *CreateSilenceInternalServerError {
	return &CreateSilenceInternalServerError{}
}

/*
CreateSilenceInternalServerError describes a response with status code 500, with default header values.

ErrorResponse defines a common error response structure.
*/
type CreateSilenceInternalServerError struct {
	Payload *CreateSilenceInternalServerErrorBody
}

// IsSuccess returns true when this create silence internal server error response has a 2xx status code
func (o *CreateSilenceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create silence internal server error response has a 3xx status code
func (o *CreateSilenceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create silence internal server error response has a 4xx status code
func (o *CreateSilenceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create silence internal server error response has a 5xx status code
func (o *CreateSilenceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create silence internal server error response a status code equal to that given
func (o *CreateSilenceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create silence internal server error response
func (o *CreateSilenceInternalServerError) Code() int {
	return 500
}

func (o *CreateSilenceInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/monitors/silences][%d] createSilenceInternalServerError %s", 500, payload)
}

func (o *CreateSilenceInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/monitors/silences][%d] createSilenceInternalServerError %s", 500, payload)
}

func (o *CreateSilenceInternalServerError) GetPayload() *CreateSilenceInternalServerErrorBody {
	return o.Payload
}

func (o *CreateSilenceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateSilenceInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CreateSilenceBadRequestBody create silence bad request body
swagger:model CreateSilenceBadRequestBody
*/
type CreateSilenceBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this create silence bad request body
func (o *CreateSilenceBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create silence bad request body based on context it is used
func (o *CreateSilenceBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateSilenceBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateSilenceBadRequestBody) UnmarshalBinary(b []byte) error {
	var res CreateSilenceBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateSilenceInternalServerErrorBody create silence internal server error body
swagger:model CreateSilenceInternalServerErrorBody
*/
type CreateSilenceInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this create silence internal server error body
func (o *CreateSilenceInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create silence internal server error body based on context it is used
func (o *CreateSilenceInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateSilenceInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateSilenceInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res CreateSilenceInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
