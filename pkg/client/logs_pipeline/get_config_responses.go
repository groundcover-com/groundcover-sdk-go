// Code generated by go-swagger; DO NOT EDIT.

package logs_pipeline

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/groundcover-com/groundcover-sdk-go/pkg/models"
)

// GetConfigReader is a Reader for the GetConfig structure.
type GetConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetConfigNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetConfigServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/pipelines/logs/config] getConfig", response, response.Code())
	}
}

// NewGetConfigOK creates a GetConfigOK with default headers values
func NewGetConfigOK() *GetConfigOK {
	return &GetConfigOK{}
}

/*
GetConfigOK describes a response with status code 200, with default header values.

logsPipelineConfigResponse contains a logs pipeline configuration entry
*/
type GetConfigOK struct {
	Payload *models.LogsPipelineConfig
}

// IsSuccess returns true when this get config o k response has a 2xx status code
func (o *GetConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get config o k response has a 3xx status code
func (o *GetConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get config o k response has a 4xx status code
func (o *GetConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get config o k response has a 5xx status code
func (o *GetConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get config o k response a status code equal to that given
func (o *GetConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get config o k response
func (o *GetConfigOK) Code() int {
	return 200
}

func (o *GetConfigOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/pipelines/logs/config][%d] getConfigOK %s", 200, payload)
}

func (o *GetConfigOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/pipelines/logs/config][%d] getConfigOK %s", 200, payload)
}

func (o *GetConfigOK) GetPayload() *models.LogsPipelineConfig {
	return o.Payload
}

func (o *GetConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LogsPipelineConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetConfigNoContent creates a GetConfigNoContent with default headers values
func NewGetConfigNoContent() *GetConfigNoContent {
	return &GetConfigNoContent{}
}

/*
GetConfigNoContent describes a response with status code 204, with default header values.

emptyLogsPipelineConfigResponse is used for empty responses
*/
type GetConfigNoContent struct {
	Payload any
}

// IsSuccess returns true when this get config no content response has a 2xx status code
func (o *GetConfigNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get config no content response has a 3xx status code
func (o *GetConfigNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get config no content response has a 4xx status code
func (o *GetConfigNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this get config no content response has a 5xx status code
func (o *GetConfigNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this get config no content response a status code equal to that given
func (o *GetConfigNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the get config no content response
func (o *GetConfigNoContent) Code() int {
	return 204
}

func (o *GetConfigNoContent) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/pipelines/logs/config][%d] getConfigNoContent %s", 204, payload)
}

func (o *GetConfigNoContent) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/pipelines/logs/config][%d] getConfigNoContent %s", 204, payload)
}

func (o *GetConfigNoContent) GetPayload() any {
	return o.Payload
}

func (o *GetConfigNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetConfigInternalServerError creates a GetConfigInternalServerError with default headers values
func NewGetConfigInternalServerError() *GetConfigInternalServerError {
	return &GetConfigInternalServerError{}
}

/*
GetConfigInternalServerError describes a response with status code 500, with default header values.

logsPipelineErrorResponse is used for error responses
*/
type GetConfigInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get config internal server error response has a 2xx status code
func (o *GetConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get config internal server error response has a 3xx status code
func (o *GetConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get config internal server error response has a 4xx status code
func (o *GetConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get config internal server error response has a 5xx status code
func (o *GetConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get config internal server error response a status code equal to that given
func (o *GetConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get config internal server error response
func (o *GetConfigInternalServerError) Code() int {
	return 500
}

func (o *GetConfigInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/pipelines/logs/config][%d] getConfigInternalServerError %s", 500, payload)
}

func (o *GetConfigInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/pipelines/logs/config][%d] getConfigInternalServerError %s", 500, payload)
}

func (o *GetConfigInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetConfigServiceUnavailable creates a GetConfigServiceUnavailable with default headers values
func NewGetConfigServiceUnavailable() *GetConfigServiceUnavailable {
	return &GetConfigServiceUnavailable{}
}

/*
GetConfigServiceUnavailable describes a response with status code 503, with default header values.

logsPipelineErrorResponse is used for error responses
*/
type GetConfigServiceUnavailable struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get config service unavailable response has a 2xx status code
func (o *GetConfigServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get config service unavailable response has a 3xx status code
func (o *GetConfigServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get config service unavailable response has a 4xx status code
func (o *GetConfigServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get config service unavailable response has a 5xx status code
func (o *GetConfigServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get config service unavailable response a status code equal to that given
func (o *GetConfigServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get config service unavailable response
func (o *GetConfigServiceUnavailable) Code() int {
	return 503
}

func (o *GetConfigServiceUnavailable) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/pipelines/logs/config][%d] getConfigServiceUnavailable %s", 503, payload)
}

func (o *GetConfigServiceUnavailable) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/pipelines/logs/config][%d] getConfigServiceUnavailable %s", 503, payload)
}

func (o *GetConfigServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetConfigServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
