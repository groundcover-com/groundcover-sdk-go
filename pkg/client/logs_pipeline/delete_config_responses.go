// Code generated by go-swagger; DO NOT EDIT.

package logs_pipeline

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteConfigReader is a Reader for the DeleteConfig structure.
type DeleteConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewDeleteConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /api/pipelines/logs/config] deleteConfig", response, response.Code())
	}
}

// NewDeleteConfigOK creates a DeleteConfigOK with default headers values
func NewDeleteConfigOK() *DeleteConfigOK {
	return &DeleteConfigOK{}
}

/*
DeleteConfigOK describes a response with status code 200, with default header values.

emptyResponse is used for empty responses
*/
type DeleteConfigOK struct {
	Payload interface{}
}

// IsSuccess returns true when this delete config o k response has a 2xx status code
func (o *DeleteConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete config o k response has a 3xx status code
func (o *DeleteConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete config o k response has a 4xx status code
func (o *DeleteConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete config o k response has a 5xx status code
func (o *DeleteConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete config o k response a status code equal to that given
func (o *DeleteConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete config o k response
func (o *DeleteConfigOK) Code() int {
	return 200
}

func (o *DeleteConfigOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/pipelines/logs/config][%d] deleteConfigOK %s", 200, payload)
}

func (o *DeleteConfigOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/pipelines/logs/config][%d] deleteConfigOK %s", 200, payload)
}

func (o *DeleteConfigOK) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConfigInternalServerError creates a DeleteConfigInternalServerError with default headers values
func NewDeleteConfigInternalServerError() *DeleteConfigInternalServerError {
	return &DeleteConfigInternalServerError{}
}

/*
DeleteConfigInternalServerError describes a response with status code 500, with default header values.

emptyResponse is used for empty responses
*/
type DeleteConfigInternalServerError struct {
	Payload interface{}
}

// IsSuccess returns true when this delete config internal server error response has a 2xx status code
func (o *DeleteConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete config internal server error response has a 3xx status code
func (o *DeleteConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete config internal server error response has a 4xx status code
func (o *DeleteConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete config internal server error response has a 5xx status code
func (o *DeleteConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete config internal server error response a status code equal to that given
func (o *DeleteConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete config internal server error response
func (o *DeleteConfigInternalServerError) Code() int {
	return 500
}

func (o *DeleteConfigInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/pipelines/logs/config][%d] deleteConfigInternalServerError %s", 500, payload)
}

func (o *DeleteConfigInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/pipelines/logs/config][%d] deleteConfigInternalServerError %s", 500, payload)
}

func (o *DeleteConfigInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
