// Code generated by go-swagger; DO NOT EDIT.

package ingestionkeys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/groundcover-com/groundcover-sdk-go/pkg/models"
)

// ListKeysReader is a Reader for the ListKeys structure.
type ListKeysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListKeysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListKeysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListKeysBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListKeysInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/rbac/ingestion-keys/list] listKeys", response, response.Code())
	}
}

// NewListKeysOK creates a ListKeysOK with default headers values
func NewListKeysOK() *ListKeysOK {
	return &ListKeysOK{}
}

/*
ListKeysOK describes a response with status code 200, with default header values.

ListKeysOK list keys o k
*/
type ListKeysOK struct {
	Payload []*models.IngestionKeyResult
}

// IsSuccess returns true when this list keys o k response has a 2xx status code
func (o *ListKeysOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list keys o k response has a 3xx status code
func (o *ListKeysOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list keys o k response has a 4xx status code
func (o *ListKeysOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list keys o k response has a 5xx status code
func (o *ListKeysOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list keys o k response a status code equal to that given
func (o *ListKeysOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list keys o k response
func (o *ListKeysOK) Code() int {
	return 200
}

func (o *ListKeysOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rbac/ingestion-keys/list][%d] listKeysOK %s", 200, payload)
}

func (o *ListKeysOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rbac/ingestion-keys/list][%d] listKeysOK %s", 200, payload)
}

func (o *ListKeysOK) GetPayload() []*models.IngestionKeyResult {
	return o.Payload
}

func (o *ListKeysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListKeysBadRequest creates a ListKeysBadRequest with default headers values
func NewListKeysBadRequest() *ListKeysBadRequest {
	return &ListKeysBadRequest{}
}

/*
ListKeysBadRequest describes a response with status code 400, with default header values.

ErrorResponse defines a common error response structure.
*/
type ListKeysBadRequest struct {
	Payload *ListKeysBadRequestBody
}

// IsSuccess returns true when this list keys bad request response has a 2xx status code
func (o *ListKeysBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list keys bad request response has a 3xx status code
func (o *ListKeysBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list keys bad request response has a 4xx status code
func (o *ListKeysBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list keys bad request response has a 5xx status code
func (o *ListKeysBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list keys bad request response a status code equal to that given
func (o *ListKeysBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list keys bad request response
func (o *ListKeysBadRequest) Code() int {
	return 400
}

func (o *ListKeysBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rbac/ingestion-keys/list][%d] listKeysBadRequest %s", 400, payload)
}

func (o *ListKeysBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rbac/ingestion-keys/list][%d] listKeysBadRequest %s", 400, payload)
}

func (o *ListKeysBadRequest) GetPayload() *ListKeysBadRequestBody {
	return o.Payload
}

func (o *ListKeysBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListKeysBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListKeysInternalServerError creates a ListKeysInternalServerError with default headers values
func NewListKeysInternalServerError() *ListKeysInternalServerError {
	return &ListKeysInternalServerError{}
}

/*
ListKeysInternalServerError describes a response with status code 500, with default header values.

ErrorResponse defines a common error response structure.
*/
type ListKeysInternalServerError struct {
	Payload *ListKeysInternalServerErrorBody
}

// IsSuccess returns true when this list keys internal server error response has a 2xx status code
func (o *ListKeysInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list keys internal server error response has a 3xx status code
func (o *ListKeysInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list keys internal server error response has a 4xx status code
func (o *ListKeysInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list keys internal server error response has a 5xx status code
func (o *ListKeysInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list keys internal server error response a status code equal to that given
func (o *ListKeysInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list keys internal server error response
func (o *ListKeysInternalServerError) Code() int {
	return 500
}

func (o *ListKeysInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rbac/ingestion-keys/list][%d] listKeysInternalServerError %s", 500, payload)
}

func (o *ListKeysInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rbac/ingestion-keys/list][%d] listKeysInternalServerError %s", 500, payload)
}

func (o *ListKeysInternalServerError) GetPayload() *ListKeysInternalServerErrorBody {
	return o.Payload
}

func (o *ListKeysInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListKeysInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
ListKeysBadRequestBody list keys bad request body
swagger:model ListKeysBadRequestBody
*/
type ListKeysBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this list keys bad request body
func (o *ListKeysBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list keys bad request body based on context it is used
func (o *ListKeysBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListKeysBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListKeysBadRequestBody) UnmarshalBinary(b []byte) error {
	var res ListKeysBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListKeysInternalServerErrorBody list keys internal server error body
swagger:model ListKeysInternalServerErrorBody
*/
type ListKeysInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this list keys internal server error body
func (o *ListKeysInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list keys internal server error body based on context it is used
func (o *ListKeysInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListKeysInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListKeysInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res ListKeysInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
