// Code generated by go-swagger; DO NOT EDIT.

package ingestionkeys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/groundcover-com/groundcover-sdk-go/pkg/models"
)

// ListIngestionKeysReader is a Reader for the ListIngestionKeys structure.
type ListIngestionKeysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListIngestionKeysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListIngestionKeysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListIngestionKeysBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListIngestionKeysInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/rbac/ingestion-keys/list] listIngestionKeys", response, response.Code())
	}
}

// NewListIngestionKeysOK creates a ListIngestionKeysOK with default headers values
func NewListIngestionKeysOK() *ListIngestionKeysOK {
	return &ListIngestionKeysOK{}
}

/*
ListIngestionKeysOK describes a response with status code 200, with default header values.

ListIngestionKeysOK list ingestion keys o k
*/
type ListIngestionKeysOK struct {
	Payload []*models.IngestionKeyResult
}

// IsSuccess returns true when this list ingestion keys o k response has a 2xx status code
func (o *ListIngestionKeysOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list ingestion keys o k response has a 3xx status code
func (o *ListIngestionKeysOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list ingestion keys o k response has a 4xx status code
func (o *ListIngestionKeysOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list ingestion keys o k response has a 5xx status code
func (o *ListIngestionKeysOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list ingestion keys o k response a status code equal to that given
func (o *ListIngestionKeysOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list ingestion keys o k response
func (o *ListIngestionKeysOK) Code() int {
	return 200
}

func (o *ListIngestionKeysOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rbac/ingestion-keys/list][%d] listIngestionKeysOK %s", 200, payload)
}

func (o *ListIngestionKeysOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rbac/ingestion-keys/list][%d] listIngestionKeysOK %s", 200, payload)
}

func (o *ListIngestionKeysOK) GetPayload() []*models.IngestionKeyResult {
	return o.Payload
}

func (o *ListIngestionKeysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIngestionKeysBadRequest creates a ListIngestionKeysBadRequest with default headers values
func NewListIngestionKeysBadRequest() *ListIngestionKeysBadRequest {
	return &ListIngestionKeysBadRequest{}
}

/*
ListIngestionKeysBadRequest describes a response with status code 400, with default header values.

ErrorResponse defines a common error response structure.
*/
type ListIngestionKeysBadRequest struct {
	Payload *ListIngestionKeysBadRequestBody
}

// IsSuccess returns true when this list ingestion keys bad request response has a 2xx status code
func (o *ListIngestionKeysBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list ingestion keys bad request response has a 3xx status code
func (o *ListIngestionKeysBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list ingestion keys bad request response has a 4xx status code
func (o *ListIngestionKeysBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list ingestion keys bad request response has a 5xx status code
func (o *ListIngestionKeysBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list ingestion keys bad request response a status code equal to that given
func (o *ListIngestionKeysBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list ingestion keys bad request response
func (o *ListIngestionKeysBadRequest) Code() int {
	return 400
}

func (o *ListIngestionKeysBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rbac/ingestion-keys/list][%d] listIngestionKeysBadRequest %s", 400, payload)
}

func (o *ListIngestionKeysBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rbac/ingestion-keys/list][%d] listIngestionKeysBadRequest %s", 400, payload)
}

func (o *ListIngestionKeysBadRequest) GetPayload() *ListIngestionKeysBadRequestBody {
	return o.Payload
}

func (o *ListIngestionKeysBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListIngestionKeysBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIngestionKeysInternalServerError creates a ListIngestionKeysInternalServerError with default headers values
func NewListIngestionKeysInternalServerError() *ListIngestionKeysInternalServerError {
	return &ListIngestionKeysInternalServerError{}
}

/*
ListIngestionKeysInternalServerError describes a response with status code 500, with default header values.

ErrorResponse defines a common error response structure.
*/
type ListIngestionKeysInternalServerError struct {
	Payload *ListIngestionKeysInternalServerErrorBody
}

// IsSuccess returns true when this list ingestion keys internal server error response has a 2xx status code
func (o *ListIngestionKeysInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list ingestion keys internal server error response has a 3xx status code
func (o *ListIngestionKeysInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list ingestion keys internal server error response has a 4xx status code
func (o *ListIngestionKeysInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list ingestion keys internal server error response has a 5xx status code
func (o *ListIngestionKeysInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list ingestion keys internal server error response a status code equal to that given
func (o *ListIngestionKeysInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list ingestion keys internal server error response
func (o *ListIngestionKeysInternalServerError) Code() int {
	return 500
}

func (o *ListIngestionKeysInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rbac/ingestion-keys/list][%d] listIngestionKeysInternalServerError %s", 500, payload)
}

func (o *ListIngestionKeysInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rbac/ingestion-keys/list][%d] listIngestionKeysInternalServerError %s", 500, payload)
}

func (o *ListIngestionKeysInternalServerError) GetPayload() *ListIngestionKeysInternalServerErrorBody {
	return o.Payload
}

func (o *ListIngestionKeysInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListIngestionKeysInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
ListIngestionKeysBadRequestBody list ingestion keys bad request body
swagger:model ListIngestionKeysBadRequestBody
*/
type ListIngestionKeysBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this list ingestion keys bad request body
func (o *ListIngestionKeysBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list ingestion keys bad request body based on context it is used
func (o *ListIngestionKeysBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListIngestionKeysBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListIngestionKeysBadRequestBody) UnmarshalBinary(b []byte) error {
	var res ListIngestionKeysBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListIngestionKeysInternalServerErrorBody list ingestion keys internal server error body
swagger:model ListIngestionKeysInternalServerErrorBody
*/
type ListIngestionKeysInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this list ingestion keys internal server error body
func (o *ListIngestionKeysInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list ingestion keys internal server error body based on context it is used
func (o *ListIngestionKeysInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListIngestionKeysInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListIngestionKeysInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res ListIngestionKeysInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
