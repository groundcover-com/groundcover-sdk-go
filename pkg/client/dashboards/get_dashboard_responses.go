// Code generated by go-swagger; DO NOT EDIT.

package dashboards

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/groundcover-com/groundcover-sdk-go/pkg/models"
)

// GetDashboardReader is a Reader for the GetDashboard structure.
type GetDashboardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDashboardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetDashboardOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDashboardBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDashboardNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDashboardInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/dashboards/{id}] getDashboard", response, response.Code())
	}
}

// NewGetDashboardOK creates a GetDashboardOK with default headers values
func NewGetDashboardOK() *GetDashboardOK {
	return &GetDashboardOK{}
}

/*
GetDashboardOK describes a response with status code 200, with default header values.

GetDashboardResponseWrapper defines the response structure for getting a dashboard.
*/
type GetDashboardOK struct {
	Payload *models.View
}

// IsSuccess returns true when this get dashboard o k response has a 2xx status code
func (o *GetDashboardOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get dashboard o k response has a 3xx status code
func (o *GetDashboardOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dashboard o k response has a 4xx status code
func (o *GetDashboardOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get dashboard o k response has a 5xx status code
func (o *GetDashboardOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get dashboard o k response a status code equal to that given
func (o *GetDashboardOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get dashboard o k response
func (o *GetDashboardOK) Code() int {
	return 200
}

func (o *GetDashboardOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/dashboards/{id}][%d] getDashboardOK %s", 200, payload)
}

func (o *GetDashboardOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/dashboards/{id}][%d] getDashboardOK %s", 200, payload)
}

func (o *GetDashboardOK) GetPayload() *models.View {
	return o.Payload
}

func (o *GetDashboardOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.View)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetDashboardBadRequest creates a GetDashboardBadRequest with default headers values
func NewGetDashboardBadRequest() *GetDashboardBadRequest {
	return &GetDashboardBadRequest{}
}

/*
GetDashboardBadRequest describes a response with status code 400, with default header values.

ErrorResponse defines a common error response structure.
*/
type GetDashboardBadRequest struct {
	Payload *GetDashboardBadRequestBody
}

// IsSuccess returns true when this get dashboard bad request response has a 2xx status code
func (o *GetDashboardBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dashboard bad request response has a 3xx status code
func (o *GetDashboardBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dashboard bad request response has a 4xx status code
func (o *GetDashboardBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get dashboard bad request response has a 5xx status code
func (o *GetDashboardBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get dashboard bad request response a status code equal to that given
func (o *GetDashboardBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get dashboard bad request response
func (o *GetDashboardBadRequest) Code() int {
	return 400
}

func (o *GetDashboardBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/dashboards/{id}][%d] getDashboardBadRequest %s", 400, payload)
}

func (o *GetDashboardBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/dashboards/{id}][%d] getDashboardBadRequest %s", 400, payload)
}

func (o *GetDashboardBadRequest) GetPayload() *GetDashboardBadRequestBody {
	return o.Payload
}

func (o *GetDashboardBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetDashboardBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetDashboardNotFound creates a GetDashboardNotFound with default headers values
func NewGetDashboardNotFound() *GetDashboardNotFound {
	return &GetDashboardNotFound{}
}

/*
GetDashboardNotFound describes a response with status code 404, with default header values.

ErrorResponse defines a common error response structure.
*/
type GetDashboardNotFound struct {
	Payload *GetDashboardNotFoundBody
}

// IsSuccess returns true when this get dashboard not found response has a 2xx status code
func (o *GetDashboardNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dashboard not found response has a 3xx status code
func (o *GetDashboardNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dashboard not found response has a 4xx status code
func (o *GetDashboardNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get dashboard not found response has a 5xx status code
func (o *GetDashboardNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get dashboard not found response a status code equal to that given
func (o *GetDashboardNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get dashboard not found response
func (o *GetDashboardNotFound) Code() int {
	return 404
}

func (o *GetDashboardNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/dashboards/{id}][%d] getDashboardNotFound %s", 404, payload)
}

func (o *GetDashboardNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/dashboards/{id}][%d] getDashboardNotFound %s", 404, payload)
}

func (o *GetDashboardNotFound) GetPayload() *GetDashboardNotFoundBody {
	return o.Payload
}

func (o *GetDashboardNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetDashboardNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetDashboardInternalServerError creates a GetDashboardInternalServerError with default headers values
func NewGetDashboardInternalServerError() *GetDashboardInternalServerError {
	return &GetDashboardInternalServerError{}
}

/*
GetDashboardInternalServerError describes a response with status code 500, with default header values.

ErrorResponse defines a common error response structure.
*/
type GetDashboardInternalServerError struct {
	Payload *GetDashboardInternalServerErrorBody
}

// IsSuccess returns true when this get dashboard internal server error response has a 2xx status code
func (o *GetDashboardInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dashboard internal server error response has a 3xx status code
func (o *GetDashboardInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dashboard internal server error response has a 4xx status code
func (o *GetDashboardInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get dashboard internal server error response has a 5xx status code
func (o *GetDashboardInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get dashboard internal server error response a status code equal to that given
func (o *GetDashboardInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get dashboard internal server error response
func (o *GetDashboardInternalServerError) Code() int {
	return 500
}

func (o *GetDashboardInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/dashboards/{id}][%d] getDashboardInternalServerError %s", 500, payload)
}

func (o *GetDashboardInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/dashboards/{id}][%d] getDashboardInternalServerError %s", 500, payload)
}

func (o *GetDashboardInternalServerError) GetPayload() *GetDashboardInternalServerErrorBody {
	return o.Payload
}

func (o *GetDashboardInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetDashboardInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

/*
GetDashboardBadRequestBody get dashboard bad request body
swagger:model GetDashboardBadRequestBody
*/
type GetDashboardBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get dashboard bad request body
func (o *GetDashboardBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get dashboard bad request body based on context it is used
func (o *GetDashboardBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetDashboardBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDashboardBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetDashboardBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetDashboardInternalServerErrorBody get dashboard internal server error body
swagger:model GetDashboardInternalServerErrorBody
*/
type GetDashboardInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get dashboard internal server error body
func (o *GetDashboardInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get dashboard internal server error body based on context it is used
func (o *GetDashboardInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetDashboardInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDashboardInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res GetDashboardInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetDashboardNotFoundBody get dashboard not found body
swagger:model GetDashboardNotFoundBody
*/
type GetDashboardNotFoundBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get dashboard not found body
func (o *GetDashboardNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get dashboard not found body based on context it is used
func (o *GetDashboardNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetDashboardNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDashboardNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetDashboardNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
