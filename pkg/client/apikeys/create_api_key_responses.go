// Code generated by go-swagger; DO NOT EDIT.

package apikeys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/groundcover-com/groundcover-sdk-go/pkg/models"
)

// CreateAPIKeyReader is a Reader for the CreateAPIKey structure.
type CreateAPIKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAPIKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewCreateAPIKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateAPIKeyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateAPIKeyConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateAPIKeyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/rbac/apikey/create] createApiKey", response, response.Code())
	}
}

// NewCreateAPIKeyOK creates a CreateAPIKeyOK with default headers values
func NewCreateAPIKeyOK() *CreateAPIKeyOK {
	return &CreateAPIKeyOK{}
}

/*
CreateAPIKeyOK describes a response with status code 200, with default header values.

CreateApiKeyResponseWrapper defines the response structure for creating an API key.
*/
type CreateAPIKeyOK struct {
	Payload *models.CreateAPIKeyResponse
}

// IsSuccess returns true when this create Api key o k response has a 2xx status code
func (o *CreateAPIKeyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create Api key o k response has a 3xx status code
func (o *CreateAPIKeyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Api key o k response has a 4xx status code
func (o *CreateAPIKeyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create Api key o k response has a 5xx status code
func (o *CreateAPIKeyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create Api key o k response a status code equal to that given
func (o *CreateAPIKeyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create Api key o k response
func (o *CreateAPIKeyOK) Code() int {
	return 200
}

func (o *CreateAPIKeyOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rbac/apikey/create][%d] createApiKeyOK %s", 200, payload)
}

func (o *CreateAPIKeyOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rbac/apikey/create][%d] createApiKeyOK %s", 200, payload)
}

func (o *CreateAPIKeyOK) GetPayload() *models.CreateAPIKeyResponse {
	return o.Payload
}

func (o *CreateAPIKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateAPIKeyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateAPIKeyBadRequest creates a CreateAPIKeyBadRequest with default headers values
func NewCreateAPIKeyBadRequest() *CreateAPIKeyBadRequest {
	return &CreateAPIKeyBadRequest{}
}

/*
CreateAPIKeyBadRequest describes a response with status code 400, with default header values.

ErrorResponse defines a common error response structure.
*/
type CreateAPIKeyBadRequest struct {
	Payload *CreateAPIKeyBadRequestBody
}

// IsSuccess returns true when this create Api key bad request response has a 2xx status code
func (o *CreateAPIKeyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create Api key bad request response has a 3xx status code
func (o *CreateAPIKeyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Api key bad request response has a 4xx status code
func (o *CreateAPIKeyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create Api key bad request response has a 5xx status code
func (o *CreateAPIKeyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create Api key bad request response a status code equal to that given
func (o *CreateAPIKeyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create Api key bad request response
func (o *CreateAPIKeyBadRequest) Code() int {
	return 400
}

func (o *CreateAPIKeyBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rbac/apikey/create][%d] createApiKeyBadRequest %s", 400, payload)
}

func (o *CreateAPIKeyBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rbac/apikey/create][%d] createApiKeyBadRequest %s", 400, payload)
}

func (o *CreateAPIKeyBadRequest) GetPayload() *CreateAPIKeyBadRequestBody {
	return o.Payload
}

func (o *CreateAPIKeyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateAPIKeyBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateAPIKeyConflict creates a CreateAPIKeyConflict with default headers values
func NewCreateAPIKeyConflict() *CreateAPIKeyConflict {
	return &CreateAPIKeyConflict{}
}

/*
CreateAPIKeyConflict describes a response with status code 409, with default header values.

ErrorResponse defines a common error response structure.
*/
type CreateAPIKeyConflict struct {
	Payload *CreateAPIKeyConflictBody
}

// IsSuccess returns true when this create Api key conflict response has a 2xx status code
func (o *CreateAPIKeyConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create Api key conflict response has a 3xx status code
func (o *CreateAPIKeyConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Api key conflict response has a 4xx status code
func (o *CreateAPIKeyConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create Api key conflict response has a 5xx status code
func (o *CreateAPIKeyConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create Api key conflict response a status code equal to that given
func (o *CreateAPIKeyConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create Api key conflict response
func (o *CreateAPIKeyConflict) Code() int {
	return 409
}

func (o *CreateAPIKeyConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rbac/apikey/create][%d] createApiKeyConflict %s", 409, payload)
}

func (o *CreateAPIKeyConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rbac/apikey/create][%d] createApiKeyConflict %s", 409, payload)
}

func (o *CreateAPIKeyConflict) GetPayload() *CreateAPIKeyConflictBody {
	return o.Payload
}

func (o *CreateAPIKeyConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateAPIKeyConflictBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateAPIKeyInternalServerError creates a CreateAPIKeyInternalServerError with default headers values
func NewCreateAPIKeyInternalServerError() *CreateAPIKeyInternalServerError {
	return &CreateAPIKeyInternalServerError{}
}

/*
CreateAPIKeyInternalServerError describes a response with status code 500, with default header values.

ErrorResponse defines a common error response structure.
*/
type CreateAPIKeyInternalServerError struct {
	Payload *CreateAPIKeyInternalServerErrorBody
}

// IsSuccess returns true when this create Api key internal server error response has a 2xx status code
func (o *CreateAPIKeyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create Api key internal server error response has a 3xx status code
func (o *CreateAPIKeyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Api key internal server error response has a 4xx status code
func (o *CreateAPIKeyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create Api key internal server error response has a 5xx status code
func (o *CreateAPIKeyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create Api key internal server error response a status code equal to that given
func (o *CreateAPIKeyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create Api key internal server error response
func (o *CreateAPIKeyInternalServerError) Code() int {
	return 500
}

func (o *CreateAPIKeyInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rbac/apikey/create][%d] createApiKeyInternalServerError %s", 500, payload)
}

func (o *CreateAPIKeyInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/rbac/apikey/create][%d] createApiKeyInternalServerError %s", 500, payload)
}

func (o *CreateAPIKeyInternalServerError) GetPayload() *CreateAPIKeyInternalServerErrorBody {
	return o.Payload
}

func (o *CreateAPIKeyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateAPIKeyInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

/*
CreateAPIKeyBadRequestBody create API key bad request body
swagger:model CreateAPIKeyBadRequestBody
*/
type CreateAPIKeyBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this create API key bad request body
func (o *CreateAPIKeyBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create API key bad request body based on context it is used
func (o *CreateAPIKeyBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateAPIKeyBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateAPIKeyBadRequestBody) UnmarshalBinary(b []byte) error {
	var res CreateAPIKeyBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateAPIKeyConflictBody create API key conflict body
swagger:model CreateAPIKeyConflictBody
*/
type CreateAPIKeyConflictBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this create API key conflict body
func (o *CreateAPIKeyConflictBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create API key conflict body based on context it is used
func (o *CreateAPIKeyConflictBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateAPIKeyConflictBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateAPIKeyConflictBody) UnmarshalBinary(b []byte) error {
	var res CreateAPIKeyConflictBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateAPIKeyInternalServerErrorBody create API key internal server error body
swagger:model CreateAPIKeyInternalServerErrorBody
*/
type CreateAPIKeyInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this create API key internal server error body
func (o *CreateAPIKeyInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create API key internal server error body based on context it is used
func (o *CreateAPIKeyInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateAPIKeyInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateAPIKeyInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res CreateAPIKeyInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
