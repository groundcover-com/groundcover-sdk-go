// Code generated by go-swagger; DO NOT EDIT.

package apikeys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeleteAPIKeyReader is a Reader for the DeleteAPIKey structure.
type DeleteAPIKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAPIKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 202:
		result := NewDeleteAPIKeyAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAPIKeyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAPIKeyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteAPIKeyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /api/rbac/apikey/{id}] deleteApiKey", response, response.Code())
	}
}

// NewDeleteAPIKeyAccepted creates a DeleteAPIKeyAccepted with default headers values
func NewDeleteAPIKeyAccepted() *DeleteAPIKeyAccepted {
	return &DeleteAPIKeyAccepted{}
}

/*
DeleteAPIKeyAccepted describes a response with status code 202, with default header values.

NoContentResponse indicates success but that no response body is expected or included.
*/
type DeleteAPIKeyAccepted struct {
}

// IsSuccess returns true when this delete Api key accepted response has a 2xx status code
func (o *DeleteAPIKeyAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete Api key accepted response has a 3xx status code
func (o *DeleteAPIKeyAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Api key accepted response has a 4xx status code
func (o *DeleteAPIKeyAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete Api key accepted response has a 5xx status code
func (o *DeleteAPIKeyAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Api key accepted response a status code equal to that given
func (o *DeleteAPIKeyAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the delete Api key accepted response
func (o *DeleteAPIKeyAccepted) Code() int {
	return 202
}

func (o *DeleteAPIKeyAccepted) Error() string {
	return fmt.Sprintf("[DELETE /api/rbac/apikey/{id}][%d] deleteApiKeyAccepted", 202)
}

func (o *DeleteAPIKeyAccepted) String() string {
	return fmt.Sprintf("[DELETE /api/rbac/apikey/{id}][%d] deleteApiKeyAccepted", 202)
}

func (o *DeleteAPIKeyAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAPIKeyBadRequest creates a DeleteAPIKeyBadRequest with default headers values
func NewDeleteAPIKeyBadRequest() *DeleteAPIKeyBadRequest {
	return &DeleteAPIKeyBadRequest{}
}

/*
DeleteAPIKeyBadRequest describes a response with status code 400, with default header values.

ErrorResponse defines a common error response structure.
*/
type DeleteAPIKeyBadRequest struct {
	Payload *DeleteAPIKeyBadRequestBody
}

// IsSuccess returns true when this delete Api key bad request response has a 2xx status code
func (o *DeleteAPIKeyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete Api key bad request response has a 3xx status code
func (o *DeleteAPIKeyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Api key bad request response has a 4xx status code
func (o *DeleteAPIKeyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete Api key bad request response has a 5xx status code
func (o *DeleteAPIKeyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Api key bad request response a status code equal to that given
func (o *DeleteAPIKeyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete Api key bad request response
func (o *DeleteAPIKeyBadRequest) Code() int {
	return 400
}

func (o *DeleteAPIKeyBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/rbac/apikey/{id}][%d] deleteApiKeyBadRequest %s", 400, payload)
}

func (o *DeleteAPIKeyBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/rbac/apikey/{id}][%d] deleteApiKeyBadRequest %s", 400, payload)
}

func (o *DeleteAPIKeyBadRequest) GetPayload() *DeleteAPIKeyBadRequestBody {
	return o.Payload
}

func (o *DeleteAPIKeyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteAPIKeyBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteAPIKeyNotFound creates a DeleteAPIKeyNotFound with default headers values
func NewDeleteAPIKeyNotFound() *DeleteAPIKeyNotFound {
	return &DeleteAPIKeyNotFound{}
}

/*
DeleteAPIKeyNotFound describes a response with status code 404, with default header values.

ErrorResponse defines a common error response structure.
*/
type DeleteAPIKeyNotFound struct {
	Payload *DeleteAPIKeyNotFoundBody
}

// IsSuccess returns true when this delete Api key not found response has a 2xx status code
func (o *DeleteAPIKeyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete Api key not found response has a 3xx status code
func (o *DeleteAPIKeyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Api key not found response has a 4xx status code
func (o *DeleteAPIKeyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete Api key not found response has a 5xx status code
func (o *DeleteAPIKeyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Api key not found response a status code equal to that given
func (o *DeleteAPIKeyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete Api key not found response
func (o *DeleteAPIKeyNotFound) Code() int {
	return 404
}

func (o *DeleteAPIKeyNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/rbac/apikey/{id}][%d] deleteApiKeyNotFound %s", 404, payload)
}

func (o *DeleteAPIKeyNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/rbac/apikey/{id}][%d] deleteApiKeyNotFound %s", 404, payload)
}

func (o *DeleteAPIKeyNotFound) GetPayload() *DeleteAPIKeyNotFoundBody {
	return o.Payload
}

func (o *DeleteAPIKeyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteAPIKeyNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewDeleteAPIKeyInternalServerError creates a DeleteAPIKeyInternalServerError with default headers values
func NewDeleteAPIKeyInternalServerError() *DeleteAPIKeyInternalServerError {
	return &DeleteAPIKeyInternalServerError{}
}

/*
DeleteAPIKeyInternalServerError describes a response with status code 500, with default header values.

ErrorResponse defines a common error response structure.
*/
type DeleteAPIKeyInternalServerError struct {
	Payload *DeleteAPIKeyInternalServerErrorBody
}

// IsSuccess returns true when this delete Api key internal server error response has a 2xx status code
func (o *DeleteAPIKeyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete Api key internal server error response has a 3xx status code
func (o *DeleteAPIKeyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Api key internal server error response has a 4xx status code
func (o *DeleteAPIKeyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete Api key internal server error response has a 5xx status code
func (o *DeleteAPIKeyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete Api key internal server error response a status code equal to that given
func (o *DeleteAPIKeyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete Api key internal server error response
func (o *DeleteAPIKeyInternalServerError) Code() int {
	return 500
}

func (o *DeleteAPIKeyInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/rbac/apikey/{id}][%d] deleteApiKeyInternalServerError %s", 500, payload)
}

func (o *DeleteAPIKeyInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/rbac/apikey/{id}][%d] deleteApiKeyInternalServerError %s", 500, payload)
}

func (o *DeleteAPIKeyInternalServerError) GetPayload() *DeleteAPIKeyInternalServerErrorBody {
	return o.Payload
}

func (o *DeleteAPIKeyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteAPIKeyInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

/*
DeleteAPIKeyBadRequestBody delete API key bad request body
swagger:model DeleteAPIKeyBadRequestBody
*/
type DeleteAPIKeyBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this delete API key bad request body
func (o *DeleteAPIKeyBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete API key bad request body based on context it is used
func (o *DeleteAPIKeyBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteAPIKeyBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteAPIKeyBadRequestBody) UnmarshalBinary(b []byte) error {
	var res DeleteAPIKeyBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeleteAPIKeyInternalServerErrorBody delete API key internal server error body
swagger:model DeleteAPIKeyInternalServerErrorBody
*/
type DeleteAPIKeyInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this delete API key internal server error body
func (o *DeleteAPIKeyInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete API key internal server error body based on context it is used
func (o *DeleteAPIKeyInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteAPIKeyInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteAPIKeyInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res DeleteAPIKeyInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeleteAPIKeyNotFoundBody delete API key not found body
swagger:model DeleteAPIKeyNotFoundBody
*/
type DeleteAPIKeyNotFoundBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this delete API key not found body
func (o *DeleteAPIKeyNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete API key not found body based on context it is used
func (o *DeleteAPIKeyNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteAPIKeyNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteAPIKeyNotFoundBody) UnmarshalBinary(b []byte) error {
	var res DeleteAPIKeyNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
