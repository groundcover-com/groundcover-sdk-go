// Code generated by go-swagger; DO NOT EDIT.

package traces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SearchTracesReader is a Reader for the SearchTraces structure.
type SearchTracesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchTracesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewSearchTracesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchTracesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchTracesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/traces/v2/search] searchTraces", response, response.Code())
	}
}

// NewSearchTracesOK creates a SearchTracesOK with default headers values
func NewSearchTracesOK() *SearchTracesOK {
	return &SearchTracesOK{}
}

/*
SearchTracesOK describes a response with status code 200, with default header values.

SearchTracesOK search traces o k
*/
type SearchTracesOK struct {
	Payload any
}

// IsSuccess returns true when this search traces o k response has a 2xx status code
func (o *SearchTracesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search traces o k response has a 3xx status code
func (o *SearchTracesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search traces o k response has a 4xx status code
func (o *SearchTracesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search traces o k response has a 5xx status code
func (o *SearchTracesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search traces o k response a status code equal to that given
func (o *SearchTracesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the search traces o k response
func (o *SearchTracesOK) Code() int {
	return 200
}

func (o *SearchTracesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/traces/v2/search][%d] searchTracesOK %s", 200, payload)
}

func (o *SearchTracesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/traces/v2/search][%d] searchTracesOK %s", 200, payload)
}

func (o *SearchTracesOK) GetPayload() any {
	return o.Payload
}

func (o *SearchTracesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewSearchTracesBadRequest creates a SearchTracesBadRequest with default headers values
func NewSearchTracesBadRequest() *SearchTracesBadRequest {
	return &SearchTracesBadRequest{}
}

/*
SearchTracesBadRequest describes a response with status code 400, with default header values.

ErrorResponse defines a common error response structure.
*/
type SearchTracesBadRequest struct {
	Payload *SearchTracesBadRequestBody
}

// IsSuccess returns true when this search traces bad request response has a 2xx status code
func (o *SearchTracesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search traces bad request response has a 3xx status code
func (o *SearchTracesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search traces bad request response has a 4xx status code
func (o *SearchTracesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search traces bad request response has a 5xx status code
func (o *SearchTracesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search traces bad request response a status code equal to that given
func (o *SearchTracesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the search traces bad request response
func (o *SearchTracesBadRequest) Code() int {
	return 400
}

func (o *SearchTracesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/traces/v2/search][%d] searchTracesBadRequest %s", 400, payload)
}

func (o *SearchTracesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/traces/v2/search][%d] searchTracesBadRequest %s", 400, payload)
}

func (o *SearchTracesBadRequest) GetPayload() *SearchTracesBadRequestBody {
	return o.Payload
}

func (o *SearchTracesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchTracesBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewSearchTracesInternalServerError creates a SearchTracesInternalServerError with default headers values
func NewSearchTracesInternalServerError() *SearchTracesInternalServerError {
	return &SearchTracesInternalServerError{}
}

/*
SearchTracesInternalServerError describes a response with status code 500, with default header values.

ErrorResponse defines a common error response structure.
*/
type SearchTracesInternalServerError struct {
	Payload *SearchTracesInternalServerErrorBody
}

// IsSuccess returns true when this search traces internal server error response has a 2xx status code
func (o *SearchTracesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search traces internal server error response has a 3xx status code
func (o *SearchTracesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search traces internal server error response has a 4xx status code
func (o *SearchTracesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search traces internal server error response has a 5xx status code
func (o *SearchTracesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search traces internal server error response a status code equal to that given
func (o *SearchTracesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the search traces internal server error response
func (o *SearchTracesInternalServerError) Code() int {
	return 500
}

func (o *SearchTracesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/traces/v2/search][%d] searchTracesInternalServerError %s", 500, payload)
}

func (o *SearchTracesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/traces/v2/search][%d] searchTracesInternalServerError %s", 500, payload)
}

func (o *SearchTracesInternalServerError) GetPayload() *SearchTracesInternalServerErrorBody {
	return o.Payload
}

func (o *SearchTracesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchTracesInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

/*
SearchTracesBadRequestBody search traces bad request body
swagger:model SearchTracesBadRequestBody
*/
type SearchTracesBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this search traces bad request body
func (o *SearchTracesBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search traces bad request body based on context it is used
func (o *SearchTracesBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchTracesBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchTracesBadRequestBody) UnmarshalBinary(b []byte) error {
	var res SearchTracesBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchTracesInternalServerErrorBody search traces internal server error body
swagger:model SearchTracesInternalServerErrorBody
*/
type SearchTracesInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this search traces internal server error body
func (o *SearchTracesInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search traces internal server error body based on context it is used
func (o *SearchTracesInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchTracesInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchTracesInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res SearchTracesInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
