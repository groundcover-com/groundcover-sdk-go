// Code generated by go-swagger; DO NOT EDIT.

package k8s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EventsSearchReader is a Reader for the EventsSearch structure.
type EventsSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EventsSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewEventsSearchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEventsSearchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEventsSearchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/k8s/v2/events/search] eventsSearch", response, response.Code())
	}
}

// NewEventsSearchOK creates a EventsSearchOK with default headers values
func NewEventsSearchOK() *EventsSearchOK {
	return &EventsSearchOK{}
}

/*
EventsSearchOK describes a response with status code 200, with default header values.

EventsSearchOK events search o k
*/
type EventsSearchOK struct {
	Payload any
}

// IsSuccess returns true when this events search o k response has a 2xx status code
func (o *EventsSearchOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this events search o k response has a 3xx status code
func (o *EventsSearchOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this events search o k response has a 4xx status code
func (o *EventsSearchOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this events search o k response has a 5xx status code
func (o *EventsSearchOK) IsServerError() bool {
	return false
}

// IsCode returns true when this events search o k response a status code equal to that given
func (o *EventsSearchOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the events search o k response
func (o *EventsSearchOK) Code() int {
	return 200
}

func (o *EventsSearchOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/k8s/v2/events/search][%d] eventsSearchOK %s", 200, payload)
}

func (o *EventsSearchOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/k8s/v2/events/search][%d] eventsSearchOK %s", 200, payload)
}

func (o *EventsSearchOK) GetPayload() any {
	return o.Payload
}

func (o *EventsSearchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewEventsSearchBadRequest creates a EventsSearchBadRequest with default headers values
func NewEventsSearchBadRequest() *EventsSearchBadRequest {
	return &EventsSearchBadRequest{}
}

/*
EventsSearchBadRequest describes a response with status code 400, with default header values.

ErrorResponse defines a common error response structure.
*/
type EventsSearchBadRequest struct {
	Payload *EventsSearchBadRequestBody
}

// IsSuccess returns true when this events search bad request response has a 2xx status code
func (o *EventsSearchBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this events search bad request response has a 3xx status code
func (o *EventsSearchBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this events search bad request response has a 4xx status code
func (o *EventsSearchBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this events search bad request response has a 5xx status code
func (o *EventsSearchBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this events search bad request response a status code equal to that given
func (o *EventsSearchBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the events search bad request response
func (o *EventsSearchBadRequest) Code() int {
	return 400
}

func (o *EventsSearchBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/k8s/v2/events/search][%d] eventsSearchBadRequest %s", 400, payload)
}

func (o *EventsSearchBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/k8s/v2/events/search][%d] eventsSearchBadRequest %s", 400, payload)
}

func (o *EventsSearchBadRequest) GetPayload() *EventsSearchBadRequestBody {
	return o.Payload
}

func (o *EventsSearchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(EventsSearchBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewEventsSearchInternalServerError creates a EventsSearchInternalServerError with default headers values
func NewEventsSearchInternalServerError() *EventsSearchInternalServerError {
	return &EventsSearchInternalServerError{}
}

/*
EventsSearchInternalServerError describes a response with status code 500, with default header values.

ErrorResponse defines a common error response structure.
*/
type EventsSearchInternalServerError struct {
	Payload *EventsSearchInternalServerErrorBody
}

// IsSuccess returns true when this events search internal server error response has a 2xx status code
func (o *EventsSearchInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this events search internal server error response has a 3xx status code
func (o *EventsSearchInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this events search internal server error response has a 4xx status code
func (o *EventsSearchInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this events search internal server error response has a 5xx status code
func (o *EventsSearchInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this events search internal server error response a status code equal to that given
func (o *EventsSearchInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the events search internal server error response
func (o *EventsSearchInternalServerError) Code() int {
	return 500
}

func (o *EventsSearchInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/k8s/v2/events/search][%d] eventsSearchInternalServerError %s", 500, payload)
}

func (o *EventsSearchInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/k8s/v2/events/search][%d] eventsSearchInternalServerError %s", 500, payload)
}

func (o *EventsSearchInternalServerError) GetPayload() *EventsSearchInternalServerErrorBody {
	return o.Payload
}

func (o *EventsSearchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(EventsSearchInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

/*
EventsSearchBadRequestBody events search bad request body
swagger:model EventsSearchBadRequestBody
*/
type EventsSearchBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this events search bad request body
func (o *EventsSearchBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this events search bad request body based on context it is used
func (o *EventsSearchBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *EventsSearchBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *EventsSearchBadRequestBody) UnmarshalBinary(b []byte) error {
	var res EventsSearchBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
EventsSearchInternalServerErrorBody events search internal server error body
swagger:model EventsSearchInternalServerErrorBody
*/
type EventsSearchInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this events search internal server error body
func (o *EventsSearchInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this events search internal server error body based on context it is used
func (o *EventsSearchInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *EventsSearchInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *EventsSearchInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res EventsSearchInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
