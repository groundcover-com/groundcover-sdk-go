// Code generated by go-swagger; DO NOT EDIT.

package k8s

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/groundcover-com/groundcover-sdk-go/pkg/models"
)

// GetEventsOverTimeReader is a Reader for the GetEventsOverTime structure.
type GetEventsOverTimeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEventsOverTimeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetEventsOverTimeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetEventsOverTimeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEventsOverTimeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/k8s/v2/events-over-time] getEventsOverTime", response, response.Code())
	}
}

// NewGetEventsOverTimeOK creates a GetEventsOverTimeOK with default headers values
func NewGetEventsOverTimeOK() *GetEventsOverTimeOK {
	return &GetEventsOverTimeOK{}
}

/*
GetEventsOverTimeOK describes a response with status code 200, with default header values.

GetEventsOverTimeOK get events over time o k
*/
type GetEventsOverTimeOK struct {
	Payload *models.GetEventsOverTimeResponse
}

// IsSuccess returns true when this get events over time o k response has a 2xx status code
func (o *GetEventsOverTimeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get events over time o k response has a 3xx status code
func (o *GetEventsOverTimeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get events over time o k response has a 4xx status code
func (o *GetEventsOverTimeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get events over time o k response has a 5xx status code
func (o *GetEventsOverTimeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get events over time o k response a status code equal to that given
func (o *GetEventsOverTimeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get events over time o k response
func (o *GetEventsOverTimeOK) Code() int {
	return 200
}

func (o *GetEventsOverTimeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/k8s/v2/events-over-time][%d] getEventsOverTimeOK %s", 200, payload)
}

func (o *GetEventsOverTimeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/k8s/v2/events-over-time][%d] getEventsOverTimeOK %s", 200, payload)
}

func (o *GetEventsOverTimeOK) GetPayload() *models.GetEventsOverTimeResponse {
	return o.Payload
}

func (o *GetEventsOverTimeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetEventsOverTimeResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetEventsOverTimeBadRequest creates a GetEventsOverTimeBadRequest with default headers values
func NewGetEventsOverTimeBadRequest() *GetEventsOverTimeBadRequest {
	return &GetEventsOverTimeBadRequest{}
}

/*
GetEventsOverTimeBadRequest describes a response with status code 400, with default header values.

ErrorResponse defines a common error response structure.
*/
type GetEventsOverTimeBadRequest struct {
	Payload *GetEventsOverTimeBadRequestBody
}

// IsSuccess returns true when this get events over time bad request response has a 2xx status code
func (o *GetEventsOverTimeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get events over time bad request response has a 3xx status code
func (o *GetEventsOverTimeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get events over time bad request response has a 4xx status code
func (o *GetEventsOverTimeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get events over time bad request response has a 5xx status code
func (o *GetEventsOverTimeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get events over time bad request response a status code equal to that given
func (o *GetEventsOverTimeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get events over time bad request response
func (o *GetEventsOverTimeBadRequest) Code() int {
	return 400
}

func (o *GetEventsOverTimeBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/k8s/v2/events-over-time][%d] getEventsOverTimeBadRequest %s", 400, payload)
}

func (o *GetEventsOverTimeBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/k8s/v2/events-over-time][%d] getEventsOverTimeBadRequest %s", 400, payload)
}

func (o *GetEventsOverTimeBadRequest) GetPayload() *GetEventsOverTimeBadRequestBody {
	return o.Payload
}

func (o *GetEventsOverTimeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetEventsOverTimeBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetEventsOverTimeInternalServerError creates a GetEventsOverTimeInternalServerError with default headers values
func NewGetEventsOverTimeInternalServerError() *GetEventsOverTimeInternalServerError {
	return &GetEventsOverTimeInternalServerError{}
}

/*
GetEventsOverTimeInternalServerError describes a response with status code 500, with default header values.

ErrorResponse defines a common error response structure.
*/
type GetEventsOverTimeInternalServerError struct {
	Payload *GetEventsOverTimeInternalServerErrorBody
}

// IsSuccess returns true when this get events over time internal server error response has a 2xx status code
func (o *GetEventsOverTimeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get events over time internal server error response has a 3xx status code
func (o *GetEventsOverTimeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get events over time internal server error response has a 4xx status code
func (o *GetEventsOverTimeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get events over time internal server error response has a 5xx status code
func (o *GetEventsOverTimeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get events over time internal server error response a status code equal to that given
func (o *GetEventsOverTimeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get events over time internal server error response
func (o *GetEventsOverTimeInternalServerError) Code() int {
	return 500
}

func (o *GetEventsOverTimeInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/k8s/v2/events-over-time][%d] getEventsOverTimeInternalServerError %s", 500, payload)
}

func (o *GetEventsOverTimeInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/k8s/v2/events-over-time][%d] getEventsOverTimeInternalServerError %s", 500, payload)
}

func (o *GetEventsOverTimeInternalServerError) GetPayload() *GetEventsOverTimeInternalServerErrorBody {
	return o.Payload
}

func (o *GetEventsOverTimeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetEventsOverTimeInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

/*
GetEventsOverTimeBadRequestBody get events over time bad request body
swagger:model GetEventsOverTimeBadRequestBody
*/
type GetEventsOverTimeBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get events over time bad request body
func (o *GetEventsOverTimeBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get events over time bad request body based on context it is used
func (o *GetEventsOverTimeBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetEventsOverTimeBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetEventsOverTimeBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetEventsOverTimeBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetEventsOverTimeInternalServerErrorBody get events over time internal server error body
swagger:model GetEventsOverTimeInternalServerErrorBody
*/
type GetEventsOverTimeInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get events over time internal server error body
func (o *GetEventsOverTimeInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get events over time internal server error body based on context it is used
func (o *GetEventsOverTimeInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetEventsOverTimeInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetEventsOverTimeInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res GetEventsOverTimeInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
