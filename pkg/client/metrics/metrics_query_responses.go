// Code generated by go-swagger; DO NOT EDIT.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// MetricsQueryReader is a Reader for the MetricsQuery structure.
type MetricsQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MetricsQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMetricsQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMetricsQueryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewMetricsQueryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/metrics/query] metricsQuery", response, response.Code())
	}
}

// NewMetricsQueryOK creates a MetricsQueryOK with default headers values
func NewMetricsQueryOK() *MetricsQueryOK {
	return &MetricsQueryOK{}
}

/*
MetricsQueryOK describes a response with status code 200, with default header values.

MetricsQueryOK metrics query o k
*/
type MetricsQueryOK struct {
	Payload interface{}
}

// IsSuccess returns true when this metrics query o k response has a 2xx status code
func (o *MetricsQueryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this metrics query o k response has a 3xx status code
func (o *MetricsQueryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this metrics query o k response has a 4xx status code
func (o *MetricsQueryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this metrics query o k response has a 5xx status code
func (o *MetricsQueryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this metrics query o k response a status code equal to that given
func (o *MetricsQueryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the metrics query o k response
func (o *MetricsQueryOK) Code() int {
	return 200
}

func (o *MetricsQueryOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/metrics/query][%d] metricsQueryOK %s", 200, payload)
}

func (o *MetricsQueryOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/metrics/query][%d] metricsQueryOK %s", 200, payload)
}

func (o *MetricsQueryOK) GetPayload() interface{} {
	return o.Payload
}

func (o *MetricsQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMetricsQueryBadRequest creates a MetricsQueryBadRequest with default headers values
func NewMetricsQueryBadRequest() *MetricsQueryBadRequest {
	return &MetricsQueryBadRequest{}
}

/*
MetricsQueryBadRequest describes a response with status code 400, with default header values.

ErrorResponse defines a common error response structure.
*/
type MetricsQueryBadRequest struct {
	Payload *MetricsQueryBadRequestBody
}

// IsSuccess returns true when this metrics query bad request response has a 2xx status code
func (o *MetricsQueryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this metrics query bad request response has a 3xx status code
func (o *MetricsQueryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this metrics query bad request response has a 4xx status code
func (o *MetricsQueryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this metrics query bad request response has a 5xx status code
func (o *MetricsQueryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this metrics query bad request response a status code equal to that given
func (o *MetricsQueryBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the metrics query bad request response
func (o *MetricsQueryBadRequest) Code() int {
	return 400
}

func (o *MetricsQueryBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/metrics/query][%d] metricsQueryBadRequest %s", 400, payload)
}

func (o *MetricsQueryBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/metrics/query][%d] metricsQueryBadRequest %s", 400, payload)
}

func (o *MetricsQueryBadRequest) GetPayload() *MetricsQueryBadRequestBody {
	return o.Payload
}

func (o *MetricsQueryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(MetricsQueryBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMetricsQueryInternalServerError creates a MetricsQueryInternalServerError with default headers values
func NewMetricsQueryInternalServerError() *MetricsQueryInternalServerError {
	return &MetricsQueryInternalServerError{}
}

/*
MetricsQueryInternalServerError describes a response with status code 500, with default header values.

ErrorResponse defines a common error response structure.
*/
type MetricsQueryInternalServerError struct {
	Payload *MetricsQueryInternalServerErrorBody
}

// IsSuccess returns true when this metrics query internal server error response has a 2xx status code
func (o *MetricsQueryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this metrics query internal server error response has a 3xx status code
func (o *MetricsQueryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this metrics query internal server error response has a 4xx status code
func (o *MetricsQueryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this metrics query internal server error response has a 5xx status code
func (o *MetricsQueryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this metrics query internal server error response a status code equal to that given
func (o *MetricsQueryInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the metrics query internal server error response
func (o *MetricsQueryInternalServerError) Code() int {
	return 500
}

func (o *MetricsQueryInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/metrics/query][%d] metricsQueryInternalServerError %s", 500, payload)
}

func (o *MetricsQueryInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/metrics/query][%d] metricsQueryInternalServerError %s", 500, payload)
}

func (o *MetricsQueryInternalServerError) GetPayload() *MetricsQueryInternalServerErrorBody {
	return o.Payload
}

func (o *MetricsQueryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(MetricsQueryInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
MetricsQueryBadRequestBody metrics query bad request body
swagger:model MetricsQueryBadRequestBody
*/
type MetricsQueryBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this metrics query bad request body
func (o *MetricsQueryBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this metrics query bad request body based on context it is used
func (o *MetricsQueryBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *MetricsQueryBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MetricsQueryBadRequestBody) UnmarshalBinary(b []byte) error {
	var res MetricsQueryBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
MetricsQueryInternalServerErrorBody metrics query internal server error body
swagger:model MetricsQueryInternalServerErrorBody
*/
type MetricsQueryInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this metrics query internal server error body
func (o *MetricsQueryInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this metrics query internal server error body based on context it is used
func (o *MetricsQueryInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *MetricsQueryInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MetricsQueryInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res MetricsQueryInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
