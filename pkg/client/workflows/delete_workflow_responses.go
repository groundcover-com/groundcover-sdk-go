// Code generated by go-swagger; DO NOT EDIT.

package workflows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeleteWorkflowReader is a Reader for the DeleteWorkflow structure.
type DeleteWorkflowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteWorkflowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteWorkflowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteWorkflowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteWorkflowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteWorkflowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /api/workflows/{id}] deleteWorkflow", response, response.Code())
	}
}

// NewDeleteWorkflowOK creates a DeleteWorkflowOK with default headers values
func NewDeleteWorkflowOK() *DeleteWorkflowOK {
	return &DeleteWorkflowOK{}
}

/*
DeleteWorkflowOK describes a response with status code 200, with default header values.

DeleteWorkflowOK delete workflow o k
*/
type DeleteWorkflowOK struct {
	Payload interface{}
}

// IsSuccess returns true when this delete workflow o k response has a 2xx status code
func (o *DeleteWorkflowOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete workflow o k response has a 3xx status code
func (o *DeleteWorkflowOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete workflow o k response has a 4xx status code
func (o *DeleteWorkflowOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete workflow o k response has a 5xx status code
func (o *DeleteWorkflowOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete workflow o k response a status code equal to that given
func (o *DeleteWorkflowOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete workflow o k response
func (o *DeleteWorkflowOK) Code() int {
	return 200
}

func (o *DeleteWorkflowOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/workflows/{id}][%d] deleteWorkflowOK %s", 200, payload)
}

func (o *DeleteWorkflowOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/workflows/{id}][%d] deleteWorkflowOK %s", 200, payload)
}

func (o *DeleteWorkflowOK) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteWorkflowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWorkflowBadRequest creates a DeleteWorkflowBadRequest with default headers values
func NewDeleteWorkflowBadRequest() *DeleteWorkflowBadRequest {
	return &DeleteWorkflowBadRequest{}
}

/*
DeleteWorkflowBadRequest describes a response with status code 400, with default header values.

ErrorResponse defines a common error response structure.
*/
type DeleteWorkflowBadRequest struct {
	Payload *DeleteWorkflowBadRequestBody
}

// IsSuccess returns true when this delete workflow bad request response has a 2xx status code
func (o *DeleteWorkflowBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete workflow bad request response has a 3xx status code
func (o *DeleteWorkflowBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete workflow bad request response has a 4xx status code
func (o *DeleteWorkflowBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete workflow bad request response has a 5xx status code
func (o *DeleteWorkflowBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete workflow bad request response a status code equal to that given
func (o *DeleteWorkflowBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete workflow bad request response
func (o *DeleteWorkflowBadRequest) Code() int {
	return 400
}

func (o *DeleteWorkflowBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/workflows/{id}][%d] deleteWorkflowBadRequest %s", 400, payload)
}

func (o *DeleteWorkflowBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/workflows/{id}][%d] deleteWorkflowBadRequest %s", 400, payload)
}

func (o *DeleteWorkflowBadRequest) GetPayload() *DeleteWorkflowBadRequestBody {
	return o.Payload
}

func (o *DeleteWorkflowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteWorkflowBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWorkflowUnauthorized creates a DeleteWorkflowUnauthorized with default headers values
func NewDeleteWorkflowUnauthorized() *DeleteWorkflowUnauthorized {
	return &DeleteWorkflowUnauthorized{}
}

/*
DeleteWorkflowUnauthorized describes a response with status code 401, with default header values.

ErrorResponse defines a common error response structure.
*/
type DeleteWorkflowUnauthorized struct {
	Payload *DeleteWorkflowUnauthorizedBody
}

// IsSuccess returns true when this delete workflow unauthorized response has a 2xx status code
func (o *DeleteWorkflowUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete workflow unauthorized response has a 3xx status code
func (o *DeleteWorkflowUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete workflow unauthorized response has a 4xx status code
func (o *DeleteWorkflowUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete workflow unauthorized response has a 5xx status code
func (o *DeleteWorkflowUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete workflow unauthorized response a status code equal to that given
func (o *DeleteWorkflowUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete workflow unauthorized response
func (o *DeleteWorkflowUnauthorized) Code() int {
	return 401
}

func (o *DeleteWorkflowUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/workflows/{id}][%d] deleteWorkflowUnauthorized %s", 401, payload)
}

func (o *DeleteWorkflowUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/workflows/{id}][%d] deleteWorkflowUnauthorized %s", 401, payload)
}

func (o *DeleteWorkflowUnauthorized) GetPayload() *DeleteWorkflowUnauthorizedBody {
	return o.Payload
}

func (o *DeleteWorkflowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteWorkflowUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWorkflowInternalServerError creates a DeleteWorkflowInternalServerError with default headers values
func NewDeleteWorkflowInternalServerError() *DeleteWorkflowInternalServerError {
	return &DeleteWorkflowInternalServerError{}
}

/*
DeleteWorkflowInternalServerError describes a response with status code 500, with default header values.

ErrorResponse defines a common error response structure.
*/
type DeleteWorkflowInternalServerError struct {
	Payload *DeleteWorkflowInternalServerErrorBody
}

// IsSuccess returns true when this delete workflow internal server error response has a 2xx status code
func (o *DeleteWorkflowInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete workflow internal server error response has a 3xx status code
func (o *DeleteWorkflowInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete workflow internal server error response has a 4xx status code
func (o *DeleteWorkflowInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete workflow internal server error response has a 5xx status code
func (o *DeleteWorkflowInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete workflow internal server error response a status code equal to that given
func (o *DeleteWorkflowInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete workflow internal server error response
func (o *DeleteWorkflowInternalServerError) Code() int {
	return 500
}

func (o *DeleteWorkflowInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/workflows/{id}][%d] deleteWorkflowInternalServerError %s", 500, payload)
}

func (o *DeleteWorkflowInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/workflows/{id}][%d] deleteWorkflowInternalServerError %s", 500, payload)
}

func (o *DeleteWorkflowInternalServerError) GetPayload() *DeleteWorkflowInternalServerErrorBody {
	return o.Payload
}

func (o *DeleteWorkflowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteWorkflowInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
DeleteWorkflowBadRequestBody delete workflow bad request body
swagger:model DeleteWorkflowBadRequestBody
*/
type DeleteWorkflowBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this delete workflow bad request body
func (o *DeleteWorkflowBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete workflow bad request body based on context it is used
func (o *DeleteWorkflowBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteWorkflowBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteWorkflowBadRequestBody) UnmarshalBinary(b []byte) error {
	var res DeleteWorkflowBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeleteWorkflowInternalServerErrorBody delete workflow internal server error body
swagger:model DeleteWorkflowInternalServerErrorBody
*/
type DeleteWorkflowInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this delete workflow internal server error body
func (o *DeleteWorkflowInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete workflow internal server error body based on context it is used
func (o *DeleteWorkflowInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteWorkflowInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteWorkflowInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res DeleteWorkflowInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
DeleteWorkflowUnauthorizedBody delete workflow unauthorized body
swagger:model DeleteWorkflowUnauthorizedBody
*/
type DeleteWorkflowUnauthorizedBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this delete workflow unauthorized body
func (o *DeleteWorkflowUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete workflow unauthorized body based on context it is used
func (o *DeleteWorkflowUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteWorkflowUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteWorkflowUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res DeleteWorkflowUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
