// Code generated by go-swagger; DO NOT EDIT.

package workflows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/groundcover-com/groundcover-sdk-go/pkg/models"
)

// CreateWorkflowReader is a Reader for the CreateWorkflow structure.
type CreateWorkflowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateWorkflowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 202:
		result := NewCreateWorkflowAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateWorkflowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateWorkflowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateWorkflowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/workflows/create] createWorkflow", response, response.Code())
	}
}

// NewCreateWorkflowAccepted creates a CreateWorkflowAccepted with default headers values
func NewCreateWorkflowAccepted() *CreateWorkflowAccepted {
	return &CreateWorkflowAccepted{}
}

/*
CreateWorkflowAccepted describes a response with status code 202, with default header values.

CreateWorkflowAccepted create workflow accepted
*/
type CreateWorkflowAccepted struct {
	Payload *models.CreateWorkflowResponse
}

// IsSuccess returns true when this create workflow accepted response has a 2xx status code
func (o *CreateWorkflowAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create workflow accepted response has a 3xx status code
func (o *CreateWorkflowAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workflow accepted response has a 4xx status code
func (o *CreateWorkflowAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this create workflow accepted response has a 5xx status code
func (o *CreateWorkflowAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this create workflow accepted response a status code equal to that given
func (o *CreateWorkflowAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the create workflow accepted response
func (o *CreateWorkflowAccepted) Code() int {
	return 202
}

func (o *CreateWorkflowAccepted) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/workflows/create][%d] createWorkflowAccepted %s", 202, payload)
}

func (o *CreateWorkflowAccepted) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/workflows/create][%d] createWorkflowAccepted %s", 202, payload)
}

func (o *CreateWorkflowAccepted) GetPayload() *models.CreateWorkflowResponse {
	return o.Payload
}

func (o *CreateWorkflowAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateWorkflowResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateWorkflowBadRequest creates a CreateWorkflowBadRequest with default headers values
func NewCreateWorkflowBadRequest() *CreateWorkflowBadRequest {
	return &CreateWorkflowBadRequest{}
}

/*
CreateWorkflowBadRequest describes a response with status code 400, with default header values.

ErrorResponse defines a common error response structure.
*/
type CreateWorkflowBadRequest struct {
	Payload *CreateWorkflowBadRequestBody
}

// IsSuccess returns true when this create workflow bad request response has a 2xx status code
func (o *CreateWorkflowBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create workflow bad request response has a 3xx status code
func (o *CreateWorkflowBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workflow bad request response has a 4xx status code
func (o *CreateWorkflowBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create workflow bad request response has a 5xx status code
func (o *CreateWorkflowBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create workflow bad request response a status code equal to that given
func (o *CreateWorkflowBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create workflow bad request response
func (o *CreateWorkflowBadRequest) Code() int {
	return 400
}

func (o *CreateWorkflowBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/workflows/create][%d] createWorkflowBadRequest %s", 400, payload)
}

func (o *CreateWorkflowBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/workflows/create][%d] createWorkflowBadRequest %s", 400, payload)
}

func (o *CreateWorkflowBadRequest) GetPayload() *CreateWorkflowBadRequestBody {
	return o.Payload
}

func (o *CreateWorkflowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateWorkflowBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateWorkflowUnauthorized creates a CreateWorkflowUnauthorized with default headers values
func NewCreateWorkflowUnauthorized() *CreateWorkflowUnauthorized {
	return &CreateWorkflowUnauthorized{}
}

/*
CreateWorkflowUnauthorized describes a response with status code 401, with default header values.

ErrorResponse defines a common error response structure.
*/
type CreateWorkflowUnauthorized struct {
	Payload *CreateWorkflowUnauthorizedBody
}

// IsSuccess returns true when this create workflow unauthorized response has a 2xx status code
func (o *CreateWorkflowUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create workflow unauthorized response has a 3xx status code
func (o *CreateWorkflowUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workflow unauthorized response has a 4xx status code
func (o *CreateWorkflowUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create workflow unauthorized response has a 5xx status code
func (o *CreateWorkflowUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create workflow unauthorized response a status code equal to that given
func (o *CreateWorkflowUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create workflow unauthorized response
func (o *CreateWorkflowUnauthorized) Code() int {
	return 401
}

func (o *CreateWorkflowUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/workflows/create][%d] createWorkflowUnauthorized %s", 401, payload)
}

func (o *CreateWorkflowUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/workflows/create][%d] createWorkflowUnauthorized %s", 401, payload)
}

func (o *CreateWorkflowUnauthorized) GetPayload() *CreateWorkflowUnauthorizedBody {
	return o.Payload
}

func (o *CreateWorkflowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateWorkflowUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewCreateWorkflowInternalServerError creates a CreateWorkflowInternalServerError with default headers values
func NewCreateWorkflowInternalServerError() *CreateWorkflowInternalServerError {
	return &CreateWorkflowInternalServerError{}
}

/*
CreateWorkflowInternalServerError describes a response with status code 500, with default header values.

ErrorResponse defines a common error response structure.
*/
type CreateWorkflowInternalServerError struct {
	Payload *CreateWorkflowInternalServerErrorBody
}

// IsSuccess returns true when this create workflow internal server error response has a 2xx status code
func (o *CreateWorkflowInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create workflow internal server error response has a 3xx status code
func (o *CreateWorkflowInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workflow internal server error response has a 4xx status code
func (o *CreateWorkflowInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create workflow internal server error response has a 5xx status code
func (o *CreateWorkflowInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create workflow internal server error response a status code equal to that given
func (o *CreateWorkflowInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create workflow internal server error response
func (o *CreateWorkflowInternalServerError) Code() int {
	return 500
}

func (o *CreateWorkflowInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/workflows/create][%d] createWorkflowInternalServerError %s", 500, payload)
}

func (o *CreateWorkflowInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/workflows/create][%d] createWorkflowInternalServerError %s", 500, payload)
}

func (o *CreateWorkflowInternalServerError) GetPayload() *CreateWorkflowInternalServerErrorBody {
	return o.Payload
}

func (o *CreateWorkflowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateWorkflowInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

/*
CreateWorkflowBadRequestBody create workflow bad request body
swagger:model CreateWorkflowBadRequestBody
*/
type CreateWorkflowBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this create workflow bad request body
func (o *CreateWorkflowBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create workflow bad request body based on context it is used
func (o *CreateWorkflowBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateWorkflowBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateWorkflowBadRequestBody) UnmarshalBinary(b []byte) error {
	var res CreateWorkflowBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateWorkflowInternalServerErrorBody create workflow internal server error body
swagger:model CreateWorkflowInternalServerErrorBody
*/
type CreateWorkflowInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this create workflow internal server error body
func (o *CreateWorkflowInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create workflow internal server error body based on context it is used
func (o *CreateWorkflowInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateWorkflowInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateWorkflowInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res CreateWorkflowInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateWorkflowUnauthorizedBody create workflow unauthorized body
swagger:model CreateWorkflowUnauthorizedBody
*/
type CreateWorkflowUnauthorizedBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this create workflow unauthorized body
func (o *CreateWorkflowUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create workflow unauthorized body based on context it is used
func (o *CreateWorkflowUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateWorkflowUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateWorkflowUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res CreateWorkflowUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
