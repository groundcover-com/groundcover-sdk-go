// Code generated by go-swagger; DO NOT EDIT.

package logs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SearchLogsReader is a Reader for the SearchLogs structure.
type SearchLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchLogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/logs/v2/search] searchLogs", response, response.Code())
	}
}

// NewSearchLogsOK creates a SearchLogsOK with default headers values
func NewSearchLogsOK() *SearchLogsOK {
	return &SearchLogsOK{}
}

/*
SearchLogsOK describes a response with status code 200, with default header values.

SearchLogsOK search logs o k
*/
type SearchLogsOK struct {
	Payload interface{}
}

// IsSuccess returns true when this search logs o k response has a 2xx status code
func (o *SearchLogsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search logs o k response has a 3xx status code
func (o *SearchLogsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search logs o k response has a 4xx status code
func (o *SearchLogsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search logs o k response has a 5xx status code
func (o *SearchLogsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search logs o k response a status code equal to that given
func (o *SearchLogsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the search logs o k response
func (o *SearchLogsOK) Code() int {
	return 200
}

func (o *SearchLogsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/logs/v2/search][%d] searchLogsOK %s", 200, payload)
}

func (o *SearchLogsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/logs/v2/search][%d] searchLogsOK %s", 200, payload)
}

func (o *SearchLogsOK) GetPayload() interface{} {
	return o.Payload
}

func (o *SearchLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchLogsBadRequest creates a SearchLogsBadRequest with default headers values
func NewSearchLogsBadRequest() *SearchLogsBadRequest {
	return &SearchLogsBadRequest{}
}

/*
SearchLogsBadRequest describes a response with status code 400, with default header values.

ErrorResponse defines a common error response structure.
*/
type SearchLogsBadRequest struct {
	Payload *SearchLogsBadRequestBody
}

// IsSuccess returns true when this search logs bad request response has a 2xx status code
func (o *SearchLogsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search logs bad request response has a 3xx status code
func (o *SearchLogsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search logs bad request response has a 4xx status code
func (o *SearchLogsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search logs bad request response has a 5xx status code
func (o *SearchLogsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search logs bad request response a status code equal to that given
func (o *SearchLogsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the search logs bad request response
func (o *SearchLogsBadRequest) Code() int {
	return 400
}

func (o *SearchLogsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/logs/v2/search][%d] searchLogsBadRequest %s", 400, payload)
}

func (o *SearchLogsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/logs/v2/search][%d] searchLogsBadRequest %s", 400, payload)
}

func (o *SearchLogsBadRequest) GetPayload() *SearchLogsBadRequestBody {
	return o.Payload
}

func (o *SearchLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchLogsBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchLogsInternalServerError creates a SearchLogsInternalServerError with default headers values
func NewSearchLogsInternalServerError() *SearchLogsInternalServerError {
	return &SearchLogsInternalServerError{}
}

/*
SearchLogsInternalServerError describes a response with status code 500, with default header values.

ErrorResponse defines a common error response structure.
*/
type SearchLogsInternalServerError struct {
	Payload *SearchLogsInternalServerErrorBody
}

// IsSuccess returns true when this search logs internal server error response has a 2xx status code
func (o *SearchLogsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search logs internal server error response has a 3xx status code
func (o *SearchLogsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search logs internal server error response has a 4xx status code
func (o *SearchLogsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search logs internal server error response has a 5xx status code
func (o *SearchLogsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search logs internal server error response a status code equal to that given
func (o *SearchLogsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the search logs internal server error response
func (o *SearchLogsInternalServerError) Code() int {
	return 500
}

func (o *SearchLogsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/logs/v2/search][%d] searchLogsInternalServerError %s", 500, payload)
}

func (o *SearchLogsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/logs/v2/search][%d] searchLogsInternalServerError %s", 500, payload)
}

func (o *SearchLogsInternalServerError) GetPayload() *SearchLogsInternalServerErrorBody {
	return o.Payload
}

func (o *SearchLogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchLogsInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
SearchLogsBadRequestBody search logs bad request body
swagger:model SearchLogsBadRequestBody
*/
type SearchLogsBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this search logs bad request body
func (o *SearchLogsBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search logs bad request body based on context it is used
func (o *SearchLogsBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchLogsBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchLogsBadRequestBody) UnmarshalBinary(b []byte) error {
	var res SearchLogsBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchLogsInternalServerErrorBody search logs internal server error body
swagger:model SearchLogsInternalServerErrorBody
*/
type SearchLogsInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this search logs internal server error body
func (o *SearchLogsInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search logs internal server error body based on context it is used
func (o *SearchLogsInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchLogsInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchLogsInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res SearchLogsInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
