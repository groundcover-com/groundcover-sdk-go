// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// WorkloadsListItem workloads list item
//
// swagger:model WorkloadsListItem
type WorkloadsListItem struct {

	// CPU limit
	CPULimit float64 `json:"cpuLimit,omitempty"`

	// CPU usage
	CPUUsage float64 `json:"cpuUsage,omitempty"`

	// cluster
	Cluster string `json:"cluster,omitempty"`

	// env
	Env string `json:"env,omitempty"`

	// env type
	EnvType string `json:"envType,omitempty"`

	// error rate
	ErrorRate float64 `json:"errorRate,omitempty"`

	// issue count
	IssueCount uint32 `json:"issueCount,omitempty"`

	// kind
	Kind string `json:"kind,omitempty"`

	// memory limit
	MemoryLimit float64 `json:"memoryLimit,omitempty"`

	// memory usage
	MemoryUsage float64 `json:"memoryUsage,omitempty"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// p50
	P50 float64 `json:"p50,omitempty"`

	// p95
	P95 float64 `json:"p95,omitempty"`

	// p99
	P99 float64 `json:"p99,omitempty"`

	// pods count
	PodsCount uint32 `json:"podsCount,omitempty"`

	// r p s
	RPS float64 `json:"rps,omitempty"`

	// ready
	Ready bool `json:"ready,omitempty"`

	// resource version
	ResourceVersion string `json:"resourceVersion,omitempty"`

	// UID
	UID string `json:"uid,omitempty"`

	// workload
	Workload string `json:"workload,omitempty"`
}

// Validate validates this workloads list item
func (m *WorkloadsListItem) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this workloads list item based on context it is used
func (m *WorkloadsListItem) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *WorkloadsListItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WorkloadsListItem) UnmarshalBinary(b []byte) error {
	var res WorkloadsListItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
