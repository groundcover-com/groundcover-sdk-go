// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// EventsOverTimeResponse EventsOverTimeResponse defines the structure for a single event in the events over time API response.
//
// swagger:model EventsOverTimeResponse
type EventsOverTimeResponse struct {

	// cluster
	Cluster string `json:"cluster,omitempty"`

	// created timestamp
	// Format: date-time
	CreatedTimestamp strfmt.DateTime `json:"createdTimestamp,omitempty"`

	// env
	Env string `json:"env,omitempty"`

	// exit code
	ExitCode string `json:"exitCode,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// normalized Uid
	NormalizedUID string `json:"normalized_uid,omitempty"`

	// object kind
	ObjectKind string `json:"object_kind,omitempty"`

	// object Uid
	ObjectUID string `json:"object_uid,omitempty"`

	// raw
	Raw interface{} `json:"raw,omitempty"`

	// reason
	Reason string `json:"reason,omitempty"`

	// timestamp
	// Format: date-time
	Timestamp strfmt.DateTime `json:"timestamp,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// Uid
	UID string `json:"uid,omitempty"`

	// workload
	Workload string `json:"workload,omitempty"`
}

// Validate validates this events over time response
func (m *EventsOverTimeResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EventsOverTimeResponse) validateCreatedTimestamp(formats strfmt.Registry) error {
	if swag.IsZero(m.CreatedTimestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("createdTimestamp", "body", "date-time", m.CreatedTimestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *EventsOverTimeResponse) validateTimestamp(formats strfmt.Registry) error {
	if swag.IsZero(m.Timestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("timestamp", "body", "date-time", m.Timestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this events over time response based on context it is used
func (m *EventsOverTimeResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EventsOverTimeResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EventsOverTimeResponse) UnmarshalBinary(b []byte) error {
	var res EventsOverTimeResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
