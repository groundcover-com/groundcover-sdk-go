// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// MetricsNamesResultEnriched metrics names result enriched
//
// swagger:model MetricsNamesResultEnriched
type MetricsNamesResultEnriched struct {

	// Description is the metric description.
	Description string `json:"description,omitempty"`

	// Highlights contains the matching parts of the metric name based on the filter.
	Highlights []string `json:"highlights"`

	// Name is the metric name.
	Name string `json:"name,omitempty"`

	// Type is the metric type (e.g., "gauge", "counter").
	Type string `json:"type,omitempty"`

	// Unit is the metric unit (e.g., "bytes", "seconds").
	Unit string `json:"unit,omitempty"`
}

// Validate validates this metrics names result enriched
func (m *MetricsNamesResultEnriched) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this metrics names result enriched based on context it is used
func (m *MetricsNamesResultEnriched) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MetricsNamesResultEnriched) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MetricsNamesResultEnriched) UnmarshalBinary(b []byte) error {
	var res MetricsNamesResultEnriched
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
