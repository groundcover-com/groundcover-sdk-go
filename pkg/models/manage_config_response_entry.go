// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ManageConfigResponseEntry manage config response entry
//
// swagger:model ManageConfigResponseEntry
type ManageConfigResponseEntry struct {

	// cluster
	Cluster string `json:"cluster,omitempty"`

	// created by
	CreatedBy string `json:"created_by,omitempty"`

	// created timestamp
	// Format: date-time
	CreatedTimestamp strfmt.DateTime `json:"created_timestamp,omitempty"`

	// env
	Env string `json:"env,omitempty"`

	// expiration timestamp
	// Format: date-time
	ExpirationTimestamp strfmt.DateTime `json:"expiration_timestamp,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// UUID
	UUID string `json:"uuid,omitempty"`

	// value
	Value string `json:"value,omitempty"`
}

// Validate validates this manage config response entry
func (m *ManageConfigResponseEntry) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateExpirationTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ManageConfigResponseEntry) validateCreatedTimestamp(formats strfmt.Registry) error {
	if swag.IsZero(m.CreatedTimestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("created_timestamp", "body", "date-time", m.CreatedTimestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ManageConfigResponseEntry) validateExpirationTimestamp(formats strfmt.Registry) error {
	if swag.IsZero(m.ExpirationTimestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("expiration_timestamp", "body", "date-time", m.ExpirationTimestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this manage config response entry based on context it is used
func (m *ManageConfigResponseEntry) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ManageConfigResponseEntry) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ManageConfigResponseEntry) UnmarshalBinary(b []byte) error {
	var res ManageConfigResponseEntry
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
